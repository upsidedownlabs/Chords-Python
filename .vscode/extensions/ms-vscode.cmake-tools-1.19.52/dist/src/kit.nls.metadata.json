{
	"messages": [
		"Testing {0} binary: {1}",
		"Getting {0} version for {1}",
		"Bad {0} binary (\"-v\" returns {1}): {2}",
		"Bad {0} binary. {1} reports version: {2} output: {3}",
		"Detected {0} compiler: {1}",
		"Bad mingw32-make binary ({0} returns non-zero): {1}",
		"Unknown GCC kit (untrusted path)",
		"Detected Clang compiler: {0}",
		"Unknown Clang kit (untrusted path)",
		"Skipping scan of %LocalAppData% folder",
		"Skipping scan of not existing path {0}",
		"Scanning directory {0} for compilers",
		"Failed to scan {0} by exception: {1}",
		"Checking file for compiler features: {0}",
		"Failed to check binary {0} by exception: {1}",
		"Failed to scan a kit file",
		"Found {0} kits in directory {1}",
		"Error running {0} with: {1}",
		"Error parsing environment variable: {0}",
		"OK running {0}, env vars: {1}",
		"Checking for kit: {0}",
		"Checking {0}",
		"Detected VsKit for version",
		"Generator Present: {0}",
		"Selected Preferred Generator Name: {0} {1}",
		"Unable to scan for GNU CLI Clang kits: CMake Path is undefined",
		"VS installation instance not found for kit \"{0}\" - ({1}). It is recommended you re-scan the kits and also remove any user-local entries that are not present anymore on the system.",
		"The environment for kit {0}: {1}",
		"Scanning for Kits on system",
		"Scanning for kits",
		"Scanning for CMake kits...",
		"Skipping scan of PATH",
		"Found Kit ({0}): {1}",
		"trusted",
		"untrusted",
		"Compiler kits may be present in these directories: {0}. Would you like to scan and execute potential compilers in these directories by adding them to \"cmake.additionalCompilerSearchDirs\"?",
		"Yes",
		"No",
		"Detected kits definition version change from {0} to {1}. Silently scanning for kits.",
		"Kit for toolchain file {0}",
		"Using compilers: {0}",
		"Using compilers for {0} ({1} architecture)",
		"Using compilers for Visual Studio ({0} architecture)",
		"Using compilers for {0} ({1} architecture)",
		"Using compilers: {0}",
		"Search for compilers on this computer",
		"Unspecified (Let CMake guess what compilers and environment to use)",
		"Not reading non-existent kits file: {0}",
		"Not reading invalid kits file: {0}",
		"Reading kits file {0}",
		"Failed to parse {0}: {1}",
		"Invalid kit contents {0} ({1}):",
		"Successfully loaded {0} kits from {1}",
		"Clean not needed: No prior Kit selected",
		"Need clean: Kit changed"
	],
	"keys": [
		"testing.compiler.binary",
		"getting.compiler.version",
		"bad.compiler.binary",
		"bad.compiler.binary.output",
		"detected.compiler",
		"bad.mingw32-make.binary",
		"unknown.gcc.kit.untrusted",
		"detected.clang.compiler",
		"unknown.clang.kit.untrusted",
		"skipping.scan.of.appdata",
		"skipping.scan.of.not.existing.path",
		"scanning.directory.for.compilers",
		"failed.to.scan",
		"checking.file.for.compiler.features",
		"filed.to.check.binary",
		"failed.to.scan.kit",
		"founds.kits.in.directory",
		"error.running.setup.script",
		"error.parsing.environment",
		"ok.running",
		"checking.for.kit",
		"checking",
		"detected.kit.for.version",
		"generator.present",
		"selected.preferred.generator.name",
		"failed.to.scan.for.kits",
		"vs.instance.not.found.run.scan.kits",
		"kit.env",
		"scanning.for.kits.on.system",
		"scanning.for.kits",
		"scanning.for.cmake.kits",
		"skip.scan.path",
		"found.kit",
		"trusted",
		"untrusted",
		"untrusted.kits.found",
		"yes",
		"no",
		"silent.kits.rescan",
		"kit.for.toolchain.file",
		"using.compilers",
		"using.compilers.for.VS",
		"using.compilers.for.VS2",
		"using.compilers.for.VS",
		"using.compilers",
		"search.for.compilers",
		"unspecified.let.cmake.guess",
		"not.reading.nonexistent.kit",
		"not.reading.invalid.path",
		"reading.kits.file",
		"failed.to.parse",
		"invalid.file.error",
		"successfully.loaded.kits",
		"clean.not.needed",
		"clean.needed"
	],
	"filePath": "src\\kit"
}