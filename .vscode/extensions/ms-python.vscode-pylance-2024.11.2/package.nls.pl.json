{
    "ClientLoc.ServerRestart.crashMessage": "Wystąpiła awaria serwera Pylance.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Wystąpiła awaria serwera Pylance. Serwer Pylance zostanie uruchomiony ponownie po wybraniu pliku wykonywalnego platformy Node.js do uruchomienia narzędzia Pylance.",
    "ClientLoc.ServerRestart.restartingMessage": "Ponowne uruchamianie serwera Pylance przy użyciu platformy Node.js...",
    "ClientLoc.ServerRestart.selectButton": "Wybierz",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Wybierz plik wykonywalny platformy Node.js, aby uruchomić serwer Pylance",
    "ClientLoc.askNodeSafetyQuestion": "Rozszerzenie Pylance jest skonfigurowana do uruchamiania z {0}. Czy chcesz użyć tego pliku wykonywalnego do uruchomienia rozszerzenia Pylance?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Tryb uzupełniania automatycznego importowania w języku Python",
    "ClientLoc.autoImportCompletionsStatusItem.text": "Uzupełnianie automatycznego importowania: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "Wyłącz",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "Włącz",
    "ClientLoc.crashTooManyRestarts": "Rozszerzenie Pylance uległo awarii 5 razy w ciągu ostatnich 3 minut. Rozszerzenie Pylance nie zostanie ponownie uruchomione. Aby uzyskać więcej informacji, sprawdź [ten link](https://aka.ms/AApf7ox).",
    "ClientLoc.pylanceAndPythonPrereleaseExtensionMismatch": "Rozszerzenia języków Pylance i Python mają niezgodne współdzielone zależności.\r\nUpewnij się, że oba rozszerzenia są najnowszą wersją wstępną.",
    "ClientLoc.pylanceAndPythonStableExtensionMismatch": "Rozszerzenia języków Pylance i Python mają niezgodne współdzielone zależności.\r\nUpewnij się, że oba rozszerzenia są najnowszą wersją stabilną.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Tryb sprawdzania typu języka Python",
    "ClientLoc.typeCheckingModeStatusItem.pickerPlaceholder": "Bieżący tryb: {0}. Wybierz tryb sprawdzania typu.",
    "ClientLoc.typeCheckingModeStatusItem.pickerSettingsPage": "wyświetl na stronie ustawień",
    "ClientLoc.typeCheckingModeStatusItem.textFormatted": "Kontrola typów: {0}",
    "ClientLoc.typeCheckingModeStatusItem.textFormattedFromConfig": "Kontrola typów: {0} (z {1})",
    "ClientLoc.typeCheckingModeStatusItem.title": "Wybierz tryb sprawdzania typu",
    "ClientLoc.typeCheckingModeStatusItem.titleConfig": "Otwórz konfigurację",
    "ClientLoc.updateSettingsErrorMsgFormatted": "Aktualizacja ustawienia „{0}.{1}” zakończyła się niepowodzeniem.",
    "Common.Help": "Pomoc",
    "Common.No": "Nie",
    "Common.Yes": "Tak",
    "Common.reload": "Załaduj ponownie",
    "Common.remindMeLater": "Przypomnij mi później",
    "LanguageServer.settingsMigratedMessage": "Ustawienia dotyczące Microsoft Language Server zostały skopiowane do ustawień rozszerzenia Pylance. Sprawdź pliki settings.json, aby uzyskać szczegółowe informacje.",
    "LanguageServer.settingsMigrationError": "Nie można przeprowadzić migracji następujących ustawień:",
    "LanguageServer.settingsNotOverridable": "Nie można ustawić „{0}”, gdy jest używany plik pyrightconfig.json lub pyproject.toml.",
    "Refactoring.MoveSymbol.newFileDetail": "Wprowadź ścieżkę lub wybierz plik docelowy",
    "Refactoring.MoveSymbol.newFileLabel": "Wprowadź ścieżkę do pliku docelowego",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "Wybierz",
    "Refactoring.MoveSymbol.openDialogTitle": "Wybierz nowy plik, do którego chcesz przenieść symbol...",
    "Refactoring.MoveSymbol.progressBarTitle": "Przenieś symbol do...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "Wyszukaj plik docelowy",
    "Refactoring.MoveSymbol.quickPickTitle": "Wybierz lokalizację docelową do przeniesienia",
    "Refactoring.MoveSymbol.separatorText": "Pliki docelowe",
    "Refactoring.SearchImports.quickPickPlaceHolder": "Wyszukaj importy",
    "Refactoring.SearchImports.quickPickTitle": "Wyszukaj dodatkowe pasujące importy",
    "commands.pylance.docstrings.fold.title": "Pylance: zwiń wszystkie dokumenty",
    "commands.pylance.docstrings.unfold.title": "Pylance: rozwiń wszystkie dokumenty",
    "commands.pylance.gotoOutputChannel.title": "Pylance: przejdź do kanału danych wyjściowych",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: czyszczenie wszystkich utrwalonych indeksów",
    "commands.pylance.logging.start.title": "Pylance: rozpocznij rejestrowanie",
    "commands.pylance.logging.stop.title": "Pylance: zatrzymaj rejestrowanie",
    "commands.pylance.profiling.start.title": "Pylance: rozpoczynanie profilowania",
    "commands.pylance.profiling.stop.title": "Pylance: zatrzymywanie profilowania",
    "commands.pylance.reportIssue.title": "Pylance: zgłaszanie problemu...",
    "settings.languageServerMode.default.description": "Pozostaw Pylance z ustawieniami domyślnymi.",
    "settings.languageServerMode.description": "Wybierz wstępnie zdefiniowany zestaw wartości dla ustawień. Aby uzyskać więcej informacji, sprawdź [ten link](https://aka.ms/languageserver-mode).",
    "settings.languageServerMode.light.description": "Ustaw Pylance, aby wykonywać tylko podstawowe czynności, aby zmniejszyć jej wagę. Zobacz link w opisie, aby dowiedzieć się, jakie ustawienia są skonfigurowane na jaką wartość.",
    "settings.python.analysis.aiCodeActions.description": "Włącz/wyłącz akcje kodu wspomagane przez AI. Wymaga włączenia rozszerzenia Copilot Chat.",
    "settings.python.analysis.aiCodeActions.implementAbstractClasses.description": "Włącz/wyłącz pomoc dotyczącą sztucznej inteligencji na potrzeby implementowania dziedziczonych klas abstrakcyjnych.",
    "settings.python.analysis.autoFormatStrings.description": "Podczas wpisywania znaku „{” w ciągu automatycznie poprzedź ciąg znakiem „f”.",
    "settings.python.analysis.autoImportCompletions.description": "Włącz uzupełnianie automatycznego importowania.",
    "settings.python.analysis.autoIndent.description": "Automatycznie dostosuj wcięcia na podstawie semantyki języka podczas wpisywania kodu w języku Python.",
    "settings.python.analysis.autoSearchPaths.description": "Automatycznie dodawaj typowe ścieżki wyszukiwania, takie jak „src”",
    "settings.python.analysis.cacheLSPData.description": "Buforuj dane LSP, aby przyspieszyć uzupełnianie. Eksperymentalne, może spowodować, że aplikacja Pylance przestanie działać.",
    "settings.python.analysis.completeFunctionParens.description": "Dodaj nawiasy do uzupełnień funkcji.",
    "settings.python.analysis.completionOverrideExperiment.description": "Włącz/wyłącz eksperyment dotyczący zachowania zastępowania ukończenia.",
    "settings.python.analysis.diagnosticMode.description": "Zakres analizy na potrzeby wyświetlania diagnostyki.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "Allows a user to override the severity levels for individual diagnostics. Use the rule name as a key and one of \"error\", \"warning\", \"information\", \"none\", `true` (alias for \"error\") or `false` (alias for \"none\") as value. The default value shown for each diagnostic is the default when \"python.analysis.typeCheckingMode\" is set to \"off\". See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (\"off\", \"basic\" and \"strict\").",
    "settings.python.analysis.disableTaggedHints.description": "Wyłącz diagnostykę wskazówek ze specjalnymi wskazówkami dla tekstu wyszarzonego lub przekreślenia.",
    "settings.python.analysis.displayEnglishDiagnostics.description": "Wyświetlaj diagnostykę w języku angielskim niezależnie od języka wyświetlania programu VS Code.",
    "settings.python.analysis.enablePytestSupport.description": "Włącza obsługę narzędzia pytest w rozszerzeniu Pylance.",
    "settings.python.analysis.enableSyncServer.description": "Użyj trybu sync server [Eksperymentalne]. tylko do użytku wewnętrznego, może spowodować, że rozszerzenie Pylance przestanie działać.",
    "settings.python.analysis.exclude.description": "Ścieżki katalogów lub plików, które nie powinny być dołączone. Zastępują one katalogi dołączania, umożliwiając wykluczenie określonych podkatalogów. Pamiętaj, że pliki w ścieżkach wykluczania mogą być nadal uwzględniane w analizie, jeśli są przywoływane (importowane) przez pliki źródłowe, które nie są wykluczone. Ścieżki mogą zawierać symbole wieloznaczne ** (katalog lub wiele poziomów katalogów), * (sekwencja zawierająca zero lub więcej znaków) lub ? (jeden znak). Jeśli nie określono ścieżek wykluczania, rozszerzenie Pylance automatycznie wyklucza następujące elementy: `**/node_modules`, `**/__pycache__`, `.git` i wszystkie katalogi środowiska wirtualnego. Jeśli ścieżka zawiera zmienną „${workspaceFolder:<workspaceName>}”, wzorzec globu będzie stosowany tylko do odpowiedniego obszaru roboczego w środowisku z wieloma głównymi obszarami roboczymi.",
    "settings.python.analysis.extraCommitChars.description": "Zezwalaj na używanie znaków „.”, „”\" jako znaków zatwierdzenia, jeśli ma to zastosowanie.",
    "settings.python.analysis.extraPaths.description": "Dodatkowe ścieżki rozpoznawania wyszukiwania importu",
    "settings.python.analysis.fixAll.description": "poprawki źródłowe do uruchomienia w rozwiązać wszystkie.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "W przypadku literałów ciągów, które wyglądają jak nazwy modułów, można przejść do definicji, aby przejść do modułu.",
    "settings.python.analysis.ignore.description": "Ścieżki katalogów lub plików, których dane wyjściowe diagnostyki (błędy i ostrzeżenia) powinny być pomijane, nawet jeśli są dołączonym plikiem lub w ramach przechodniego zamknięcia dołączonego pliku. Ścieżki mogą zawierać symbole wieloznaczne ** (katalog lub wiele poziomów katalogów), * (sekwencja zawierająca zero lub więcej znaków) lub ? (jeden znak). Jeśli ścieżka zawiera zmienną „${workspaceFolder:<workspaceName>}”, wzorzec globu będzie stosowany tylko do odpowiedniego obszaru roboczego w środowisku z wieloma głównymi obszarami roboczymi.",
    "settings.python.analysis.importFormat.description": "Definiuje domyślny format na potrzeby importowania modułów.",
    "settings.python.analysis.include.description": "Ścieżki katalogów lub plików, które powinny zostać dołączone. Jeśli nie określono żadnych ścieżek, rozszerzenie Pylance domyślnie używa katalogu głównego obszaru roboczego. Ścieżki mogą zawierać symbole wieloznaczne ** (katalog lub wiele poziomów katalogów), * (sekwencja zawierająca zero lub więcej znaków) lub ? (jeden znak). Jeśli ścieżka zawiera zmienną „${workspaceFolder:<workspaceName>}”, wzorzec globu będzie stosowany tylko do odpowiedniego obszaru roboczego w środowisku z wieloma głównymi obszarami roboczymi.",
    "settings.python.analysis.includeAliasesFromUserFiles.description": "Uwzględnij symbole aliasów z plików użytkownika. Spowoduje to, że symbole aliasów będą wyświetlane w funkcjach takich jak „dodaj import”, „importuj automatycznie”",
    "settings.python.analysis.indexing.description": "Włącz indeksowanie zainstalowanych bibliotek innych firm i plików użytkowników dla funkcji językowych, takich jak automatyczne importowanie, dodawanie importu, symbole obszaru roboczego itp.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "Włącz/wyłącz wskazówki śródwierszowe dla nazw argumentów wywołania:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "Włącz/wyłącz wskazówki śródwierszowe dla zwracanych typów funkcji:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "Włącz/wyłącz wskazówki inlay dla typów parametrów funkcji pytest:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "Enable/disable inlay hints for variable types. Hints are not displayed for assignments of literals or constants:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "Określa poziom rejestrowania w panelu Dane wyjściowe.",
    "settings.python.analysis.nodeExecutable.description": "Ścieżka do pliku wykonywalnego platformy Node.js, który ma być używany do uruchamiania serwera języka. Jeśli nie zostanie określony, serwer języka będzie używać pliku wykonywalnego platformy Node.js, który jest dostarczany z edytorem VS Code. Ustaw tę opcję, jeśli masz problemy z brakiem pamięci na serwerze Pylance. Aby uzyskać więcej informacji, zobacz [tutaj](https://aka.ms/AApf7ox).",
    "settings.python.analysis.packageIndexDepths.description": "Służy do zastępowania liczby poziomów do indeksowania w ramach zainstalowanych pakietów na zasadzie dla poszczególnych pakietów. Domyślnie indeksowane są tylko moduły najwyższego poziomu (depth = 1). Aby indeksować moduły podrzędne, zwiększ depth o 1 dla każdego poziomu modułu podrzędnego, który chcesz indeksować. Akceptowane wartości to:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\nJeśli parametr „includeAllSymbols” jest ustawiony na wartość „false”, uwzględniane są tylko symbole w „__all__” każdego pakietu. Po ustawieniu na wartość „true” rozszerzenie Pylance będzie indeksować wszystkie deklaracje symboli modułu/najwyższego poziomu w pliku.  \r\n  \r\nPrzykład użycia: \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "Indeksy dla wszystkich bibliotek innych firm zostaną utrwalone na dysku.",
    "settings.python.analysis.regenerateStdLibIndices.description": "Zamiast polegać na udostępnionych indeksach stdlib.json dla wszystkich wersji języka Python, wygeneruj unikatowe indeksy dostosowane do konkretnej wersji języka Python i platformy każdego obszaru roboczego. Ten proces regeneracji wpłynie na wydajność, w przeciwieństwie do korzystania z gotowych indeksów stdlib.",
    "settings.python.analysis.reportExtraTelemetry.description": "Zgłoś dodatkowe dane telemetryczne [eksperymentalne]. Tylko do użytku wewnętrznego. Może spowodować, że rozszerzenie Pylance zacznie działać wolno.",
    "settings.python.analysis.stubPath.description": "Ścieżka do katalogu zawierającego pliki klasy zastępczej typu niestandardowego.",
    "settings.python.analysis.supportDocstringTemplate.description": "Włącz/wyłącz obsługę generowania ciągu docstring. W pustym elemencie docstring użyj „Ctrl+Spacja”, aby wygenerować ciąg docstring.",
    "settings.python.analysis.supportRestructuredText.description": "Enable/disable support for reStructuredText in docstrings. Experimental, may cause docstrings to no longer render.",
    "settings.python.analysis.typeEvaluation.analyzeUnannotatedFunctions.description": "Analizuj i raportuj błędy dla funkcji i metod, które nie mają adnotacji typu dla parametrów wejściowych lub zwracanych typów. Wartość domyślna tego ustawienia to „true”.",
    "settings.python.analysis.typeEvaluation.deprecateTypingAliases.description": "Program PEP 585 wskazuje, że aliasy typów w kolekcjach standardowych, które zostały wprowadzone wyłącznie w celu obsługi typów ogólnych, są przestarzałe w języku Python 3.9. Ten przełącznik określa, czy są one traktowane jako przestarzałe. Dotyczy to tylko wersji pythonVersion w wersji 3.9 lub nowszej. Wartość domyślna tego ustawienia to „false”, ale w przyszłości może zostać przełączona na wartość „true”.",
    "settings.python.analysis.typeEvaluation.disableBytesTypePromotions.description": "Wyłącza starsze zachowanie polegające na tym, że elementy `bytearray` i `memoryview` są uznawane za podtypy `bytes`. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) wycofuje to zachowanie, ale ten przełącznik jest udostępniany w celu przywrócenia starszego zachowania. Wartość domyślna tego ustawienia to „false”.",
    "settings.python.analysis.typeEvaluation.enableExperimentalFeatures.description": "Włącza zestaw eksperymentalnych (w większości nieudokumentowanych) funkcji odpowiadających proponowanym lub eksploracyjnym zmianom standardu pisania w języku Python. Te funkcje prawdopodobnie ulegną zmianie lub zostaną usunięte, więc nie powinny być używane z wyjątkiem celów eksperymentowania. Wartość domyślna tego ustawienia to `false`.",
    "settings.python.analysis.typeEvaluation.enableReachabilityAnalysis.description": "Jeśli ta opcja jest włączona, kod uznany za nieosiągalny przez analizę typu jest zgłaszany przy użyciu oznakowanego wskazówki. To ustawienie nie ma wpływu na kod uznany za nieosiągalny niezależnie od analizy typu; taki kod jest zawsze zgłaszany jako nieosiągalny. To ustawienie nie działa również w przypadku korzystania z wersji wiersza polecenia narzędzia pyright, ponieważ nigdy nie emituje oznakowanych wskazówek dla nieosiągalnego kodu.",
    "settings.python.analysis.typeEvaluation.enableTypeIgnoreComments.description": "Program PEP 484 definiuje obsługę komentarzy typu `# type: ignore`. Ten przełącznik włącza lub wyłącza obsługę tych komentarzy. Wartość domyślna tego ustawienia to „true”. Nie ma to wpływu na komentarze `# pyright: ignore`.",
    "settings.python.analysis.typeEvaluation.strictDictionaryInference.description": "Podczas wnioskowania typu kluczy i wartości słownika należy zastosować ścisłe założenia dotyczące typów. Na przykład wyrażenie `{'a': 1, 'b': 'a'}` można wywnioskować, że jest typu `dict[str, Any]` lub `dict[str, int | str]`. Jeśli to ustawienie ma wartość true, będzie używać tego ostatniego (bardziej restrykcyjnego) typu. Wartość domyślna tego ustawienia to `false`.",
    "settings.python.analysis.typeEvaluation.strictListInference.description": "Podczas wnioskowania typu listy należy używać ścisłych założeń typu. Na przykład można wywnioskować, że wyrażenie `[1, 'a', 3.4]` ma typ `list[Any]` lub `list[int | str | float]`. Jeśli to ustawienie ma wartość „true”, będzie używać tego ostatniego (bardziej restrykcyjnego) typu. Wartość domyślna tego ustawienia to „false”.",
    "settings.python.analysis.typeEvaluation.strictParameterNoneValue.description": "Program PEP 484 wskazuje, że gdy do parametru funkcji jest przypisana wartość domyślna None, jego typ powinien być niejawnie Optional, nawet jeśli jawny typ nie jest. Po włączeniu ta reguła wymaga, aby adnotacje typu parametru wyraźnie używały w tym przypadku opcji Optional. Wartość domyślna tego ustawienia to „true”.",
    "settings.python.analysis.typeEvaluation.strictSetInference.description": "When inferring the type of a set, use strict type assumptions. For example, the expression `{1, 'a', 3.4}` could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeshedPaths.description": "Ścieżki do wyszukiwania modułów typeshed.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "Użyj implementacji biblioteki, aby wyodrębnić informacje o typie, gdy wycinek typu jest nieobecny.",
    "settings.python.analysis.userFileIndexingLimit.description": "Maksymalna liczba plików użytkownika do indeksowania w obszarze roboczym. Indeksowanie plików jest zadaniem intensywnie obciążającym wydajność. Użyj tego ustawienia, aby ograniczyć liczbę plików, które chcesz indeksować. Jeśli wprowadzisz wartość -1, zindeksujemy wszystkie pliki.",
    "settings.typecheckingMode.basic.description": "Wszystkie reguły z reguł sprawdzania typów „off” + „basic”.",
    "settings.typecheckingMode.off.description": "Pokaż diagnostykę nieprawidłowej składni, nierozwiązanych importów i niezdefiniowanych zmiennych.",
    "settings.typecheckingMode.standard.description": "Wszystkie reguły z reguł sprawdzania typów „basic” + „standard”.",
    "settings.typecheckingMode.strict.description": "Wszystkie reguły z reguł sprawdzania typów „standard” + „strict”."
}
