{
    "ClientLoc.ServerRestart.crashMessage": "Pylance ist abgestürzt.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Pylance ist abgestürzt. Die Pylance wird neu gestartet, wenn Sie eine Node.js ausführbare Datei auswählen, um Pylance auszuführen.",
    "ClientLoc.ServerRestart.restartingMessage": "Die Pylance wird mit Node.js neu gestartet...",
    "ClientLoc.ServerRestart.selectButton": "Auswählen",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Wählen Sie Node.js ausführbare Datei aus, um Pylance auszuführen.",
    "ClientLoc.askNodeSafetyQuestion": "Pylance ist für die Ausführung mit {0} konfiguriert. Möchten Sie diese ausführbare Datei zum Ausführen von Pylance verwenden?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Python-Modus für Autoimport-Vervollständigungen",
    "ClientLoc.autoImportCompletionsStatusItem.text": "Autoimport-Vervollständigungen: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "Ausschalten",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "Einschalten",
    "ClientLoc.crashTooManyRestarts": "Pylance ist in den letzten 3 Minuten 5-mal abgestürzt. Pylance wird nicht neu gestartet. Weitere Informationen finden Sie unter [diesem Link](https://aka.ms/AApf7ox).",
    "ClientLoc.pylanceAndPythonPrereleaseExtensionMismatch": "Pylance- und Python-Erweiterungen weisen inkompatible freigegebene Abhängigkeiten auf.\r\nStellen Sie sicher, dass es sich bei beiden Erweiterungen um die neueste Vorabversion handelt.",
    "ClientLoc.pylanceAndPythonStableExtensionMismatch": "Pylance- und Python-Erweiterungen weisen inkompatible freigegebene Abhängigkeiten auf.\r\nStellen Sie sicher, dass es sich bei beiden Erweiterungen um die neueste stabile Version handelt.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Python-Typüberprüfungsmodus",
    "ClientLoc.typeCheckingModeStatusItem.pickerPlaceholder": "Aktueller Modus: {0}. Wählen Sie den Typüberprüfungsmodus aus.",
    "ClientLoc.typeCheckingModeStatusItem.pickerSettingsPage": "auf Einstellungsseite anzeigen",
    "ClientLoc.typeCheckingModeStatusItem.textFormatted": "Typüberprüfung: {0}",
    "ClientLoc.typeCheckingModeStatusItem.textFormattedFromConfig": "Typüberprüfung: {0} (von {1})",
    "ClientLoc.typeCheckingModeStatusItem.title": "Typüberprüfungsmodus auswählen",
    "ClientLoc.typeCheckingModeStatusItem.titleConfig": "Konfiguration öffnen",
    "ClientLoc.updateSettingsErrorMsgFormatted": "Aktualisierung der Einstellung '{0}.{1}' fehlgeschlagen.",
    "Common.Help": "Hilfe",
    "Common.No": "Nein",
    "Common.Yes": "Ja",
    "Common.reload": "Neu laden",
    "Common.remindMeLater": "Später erinnern",
    "LanguageServer.settingsMigratedMessage": "Für Microsoft Language Server geltende Einstellungen wurden in die Pylanceeinstellungen kopiert. Weitere Informationen finden Sie in den settings.json-Dateien.",
    "LanguageServer.settingsMigrationError": "Die folgenden Einstellungen konnten nicht migriert werden:",
    "LanguageServer.settingsNotOverridable": "\"{0}\" kann nicht festgelegt werden, wenn pyrightconfig.json oder pyproject.toml verwendet wird.",
    "Refactoring.MoveSymbol.newFileDetail": "Pfad eingeben oder Zieldatei auswählen",
    "Refactoring.MoveSymbol.newFileLabel": "Zieldateipfad eingaben",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "Auswählen",
    "Refactoring.MoveSymbol.openDialogTitle": "Wählen Sie eine neue Datei aus, in die das Symbol verschoben werden soll...",
    "Refactoring.MoveSymbol.progressBarTitle": "Symbol verschieben nach...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "Zieldatei suchen",
    "Refactoring.MoveSymbol.quickPickTitle": "Ziel für Verschiebung auswählen",
    "Refactoring.MoveSymbol.separatorText": "Zieldateien",
    "Refactoring.SearchImports.quickPickPlaceHolder": "Importe suchen",
    "Refactoring.SearchImports.quickPickTitle": "Zusätzliche übereinstimmende Importe suchen",
    "commands.pylance.docstrings.fold.title": "Pylance: Alle Docstrings zusammenklappen",
    "commands.pylance.docstrings.unfold.title": "Pylance: Alle Docstrings aufklappen",
    "commands.pylance.gotoOutputChannel.title": "Pylance: Zum Ausgabekanal wechseln",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: Alle persistenten Indizes löschen",
    "commands.pylance.logging.start.title": "Pylance: Protokollierung starten",
    "commands.pylance.logging.stop.title": "Pylance: Protokollierung beenden",
    "commands.pylance.profiling.start.title": "Pylance: Profilerstellung starten",
    "commands.pylance.profiling.stop.title": "Pylance: Profilerstellung beenden",
    "commands.pylance.reportIssue.title": "Pylance: Problem melden...",
    "settings.languageServerMode.default.description": "Übernehmen Sie die Standardeinstellungen für Pylance.",
    "settings.languageServerMode.description": "Wählen Sie einen vordefinierten Satz von Werten für die Einstellungen aus. Weitere Informationen finden Sie unter [diesem Link](https://aka.ms/languageserver-mode).",
    "settings.languageServerMode.light.description": "Legen Sie Pylance so fest, dass nur wichtige Aufgaben ausgeführt werden, um es zu erleichtern. Unter dem Link in der Beschreibung erfahren Sie genau, welche Einstellungen auf welchen Wert festgelegt sind.",
    "settings.python.analysis.aiCodeActions.description": "Aktivieren/Deaktivieren von KI-gestützten Codeaktionen. Erfordert die Aktivierung der Copilot Chaterweiterung.",
    "settings.python.analysis.aiCodeActions.implementAbstractClasses.description": "Hiermit wird die KI-Unterstützung zum Implementieren geerbter abstrakter Klassen aktiviert/deaktiviert.",
    "settings.python.analysis.autoFormatStrings.description": "Wenn Sie ein \"{\" in eine Zeichenfolge eingeben, stellen Sie der Zeichenfolge automatisch das Präfix \"f\" voran.",
    "settings.python.analysis.autoImportCompletions.description": "Autoimport-Vervollständigungen aktivieren.",
    "settings.python.analysis.autoIndent.description": "Passen Sie den Einzug automatisch basierend auf der Sprachsemantik an, wenn Sie Python-Code eingeben.",
    "settings.python.analysis.autoSearchPaths.description": "Automatisches Hinzufügen allgemeiner Suchpfade wie \"src\".",
    "settings.python.analysis.cacheLSPData.description": "Speichern Sie LSP-Daten für schnellere Vervollständigungen zwischen. Experimentell, kann dazu führen, dass Pylance nicht mehr funktioniert.",
    "settings.python.analysis.completeFunctionParens.description": "Fügen Sie Funktionsabschlüssen Klammern hinzu.",
    "settings.python.analysis.completionOverrideExperiment.description": "Aktivieren/deaktivieren Sie das Überschreibungsverhalten bei Abschluss des Experiments.",
    "settings.python.analysis.diagnosticMode.description": "Analysebereich zum Anzeigen der Diagnose.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "Ermöglicht einem Benutzer, die Schweregrade für einzelne Diagnosen zu überschreiben. Verwenden Sie den Regelnamen als Schlüssel und einen der Werte \"error\", \"warning\", \"information\", \"none\", \"true\" (Alias für \"error\") oder \"false\" (Alias für \"none\"). Der für jede Diagnose angezeigte Standardwert ist der Standardwert, wenn \"python.analysis.typeCheckingMode\" auf \"off\" festgelegt ist. Die Standardwerte für jeden Typüberprüfungsmodus (\"off\", \"basic\" und \"strict\") finden Sie [hier](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults).",
    "settings.python.analysis.disableTaggedHints.description": "Deaktivieren Sie die Hinweisdiagnose mit speziellen Hinweisen für ausgegrauten oder durchgestrichenen Text.",
    "settings.python.analysis.displayEnglishDiagnostics.description": "Diagnose unabhängig von der Anzeigesprache des VS Code in Englisch anzeigen.",
    "settings.python.analysis.enablePytestSupport.description": "Aktiviert pytest-Unterstützung in Pylance.",
    "settings.python.analysis.enableSyncServer.description": "Verwenden des sync server Modus [Experimentell]. Nur zur internen Verwendung kann Pylance nicht mehr funktionieren.",
    "settings.python.analysis.exclude.description": "Pfade von Verzeichnissen oder Dateien, die nicht eingeschlossen werden sollen. Diese überschreiben die Einschlussverzeichnisse, sodass bestimmte Unterverzeichnisse ausgeschlossen werden können. Beachten Sie, dass Dateien in den Ausschlusspfaden weiterhin in die Analyse einbezogen werden können, wenn von Quelldateien, die nicht ausgeschlossen sind, auf sie verwiesen (importiert) wird. Pfade können Platzhalterzeichen ** (ein Verzeichnis oder mehrere Ebenen von Verzeichnissen), * (eine Sequenz von null oder mehr Zeichen) oder ? enthalten. (einzelnes Zeichen) Wenn keine Ausschlusspfade angegeben werden, schließt Pylance automatisch Folgendes aus: `**/node_modules`, `**/__pycache__`, `.git` und alle virtuellen Umgebungsverzeichnisse. Wenn der Pfad die Variable „${workspaceFolder:<workspaceName>}“ enthält, gilt das glob Muster nur für den entsprechenden Arbeitsbereich in einer Umgebung mit mehreren Stammarbeitsbereichen.",
    "settings.python.analysis.extraCommitChars.description": "Die Verwendung von \".\", \"(\" als Commitzeichen zulassen, falls zutreffend.",
    "settings.python.analysis.extraPaths.description": "Zusätzliche Suchauflösungspfade für Importe",
    "settings.python.analysis.fixAll.description": "Quellkorrekturen, die in \"fix all\" ausgeführt werden sollen.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "Für Zeichenfolgenliterale, die wie Modulnamen aussehen, ermöglicht \"go to definition\", zum Modul zu wechseln.",
    "settings.python.analysis.ignore.description": "Pfade von Verzeichnissen oder Dateien, deren Diagnoseausgabe (Fehler und Warnungen) unterdrückt werden soll, auch wenn es sich um eine eingeschlossene Datei oder innerhalb des transitiven Abschlusses einer eingeschlossenen Datei handelt. Pfade können Platzhalterzeichen ** (ein Verzeichnis oder mehrere Ebenen von Verzeichnissen), * (eine Sequenz von null oder mehr Zeichen) oder ? enthalten. (einzelnes Zeichen) Wenn der Pfad die Variable „${workspaceFolder:<workspaceName>}“ enthält, gilt das glob Muster nur für den entsprechenden Arbeitsbereich in einer Umgebung mit mehreren Stammarbeitsbereichen.",
    "settings.python.analysis.importFormat.description": "Definiert das Standardformat für den Import von Modulen.",
    "settings.python.analysis.include.description": "Pfade von Verzeichnissen oder Dateien, die eingeschlossen werden sollen. Wenn keine Pfade angegeben werden, verwendet Pylance standardmäßig das Stammverzeichnis des Arbeitsbereichs. Pfade können Platzhalterzeichen ** (ein Verzeichnis oder mehrere Ebenen von Verzeichnissen), * (eine Sequenz von null oder mehr Zeichen) oder ? enthalten. (einzelnes Zeichen) Wenn der Pfad die Variable „${workspaceFolder:<workspaceName>}“ enthält, gilt das glob Muster nur für den entsprechenden Arbeitsbereich in einer Umgebung mit mehreren Stammarbeitsbereichen.",
    "settings.python.analysis.includeAliasesFromUserFiles.description": "Schließen Sie Aliassymbole aus Benutzerdateien ein. Dadurch werden Aliassymbole erstellt, die in Features wie \"Import hinzufügen\" oder \"Automatischer Import\" angezeigt werden.",
    "settings.python.analysis.indexing.description": "Aktivieren Sie die Indizierung installierter Drittanbieterbibliotheken und Benutzerdateien für Sprachfeatures wie den automatischen Import, das Hinzufügen von Importen, Arbeitsbereichssymbole usw.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "Aktivieren/Deaktivieren von Inlayhinweisen für Aufrufargumentnamen:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "Aktivieren/Deaktivieren von Inlayhinweisen für Funktionsrückgabetypen:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "Aktivieren/Deaktivieren von Inlayhinweisen für pytest-Funktionsparametertypen:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "Enable/disable inlay hints for variable types. Hints are not displayed for assignments of literals or constants:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "Gibt den Protokolliergrad für den Ausgabebereich an.",
    "settings.python.analysis.nodeExecutable.description": "Pfad zu einer ausführbaren Node.js-Datei, die zum Ausführen des Sprachservers verwendet werden soll. Wenn keine Angabe erfolgt, verwendet der Sprachserver die Node.js ausführbare Datei, die mit VS Code ausgeliefert wird. Legen Sie diese Option fest, wenn bei Problemen mit Pylance nicht genügend Arbeitsspeicher verfügbar ist. Weitere Informationen finden Sie [hier](https://aka.ms/AApf7ox).",
    "settings.python.analysis.packageIndexDepths.description": "Wird verwendet, um zu überschreiben, wie viele Ebenen unter installierten Paketen pro Paket indiziert werden sollen. Standardmäßig werden nur Module der obersten Ebene indiziert (depth = 1). Um Submodule zu indizieren, erhöhen Sie depth für jede Ebene des Submoduls, das Sie indizieren möchten, um 1. Akzeptierte Werte sind:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\nWenn \"includeAllSymbols\" auf \"false\" festgelegt ist, werden nur Symbole in den \"__all__\" jedes Pakets eingeschlossen. Wenn sie auf \"true\" festgelegt ist, indiziert Pylance alle Symboldeklarationen auf Modul-/oberster Ebene in der Datei.  \r\n  \r\nVerwendungsbeispiel: \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "Indizes für alle Drittanbieterbibliotheken werden auf dem Datenträger beibehalten.",
    "settings.python.analysis.regenerateStdLibIndices.description": "Anstatt sich auf die freigegebenen stdlib.json-Indizes für alle Python-Versionen zu verlassen, generieren Sie eindeutige Indizes, die auf die spezifische Python-Version und -Plattform jedes Arbeitsbereichs zugeschnitten sind. Dieser Neugenerierungsprozess wirkt sich auf die Leistung aus, im Gegensatz zur Verwendung der vordefinierten stdlib-Indizes.",
    "settings.python.analysis.reportExtraTelemetry.description": "Melden zusätzlicher Telemetriedaten [experimentell]. Nur für die interne Verwendung. Kann die Pylance verlangsamen.",
    "settings.python.analysis.stubPath.description": "Pfad zum Verzeichnis, das Stubdateien vom benutzerdefinierten Typ enthält.",
    "settings.python.analysis.supportDocstringTemplate.description": "Aktiviert bzw. deaktiviert die Unterstützung für die docstring-Generierung. Verwenden Sie STRG+LEERTASTE in einer leeren docstring, um eine docstring zu generieren.",
    "settings.python.analysis.supportRestructuredText.description": "Aktivieren/Deaktivieren Sie die Unterstützung für reStructuredText in docstrings. Experimentell kann dazu führen, dass docstrings nicht mehr gerendert werden.",
    "settings.python.analysis.typeEvaluation.analyzeUnannotatedFunctions.description": "Analysieren und melden Sie Fehler für Funktionen und Methoden, die keine Typannotationen für Eingabeparameter oder Rückgabetypen haben. Der Standardwert für diese Einstellung ist „true“.",
    "settings.python.analysis.typeEvaluation.deprecateTypingAliases.description": "PEP 585 gibt an, dass Aliase zu Typen in Standardsammlungen, die nur zur Unterstützung von Generika eingeführt wurden, ab Python 3.9 veraltet sind. Dieser Schalter steuert, ob diese als veraltet behandelt werden. Dies gilt nur, wenn die pythonVersion 3.9 oder höher ist. Der Standardwert für diese Einstellung ist „false“, kann aber in Zukunft auf „true“ umgestellt werden.",
    "settings.python.analysis.typeEvaluation.disableBytesTypePromotions.description": "Deaktiviert das alte Verhalten, bei dem `bytearray` und `memoryview` als Subtypen von `bytes` betrachtet werden. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) veraltet dieses Verhalten, aber dieser Schalter wird bereitgestellt, um das ältere Verhalten wiederherzustellen. Der Standardwert für diese Einstellung ist `false`.",
    "settings.python.analysis.typeEvaluation.enableExperimentalFeatures.description": "Ermöglicht eine Reihe von experimentellen (meist undokumentierten) Funktionen, die vorgeschlagenen oder explorativen Änderungen am Python-Typisierungsstandard entsprechen. Diese Funktionen werden wahrscheinlich geändert oder entfernt, so dass sie nur zu Experimentierzwecken verwendet werden sollten. Der Standardwert für diese Einstellung ist `false`.",
    "settings.python.analysis.typeEvaluation.enableReachabilityAnalysis.description": "Wenn diese Option aktiviert ist, wird Code, der von der Typanalyse als nicht erreichbar erkannt wird, mithilfe eines markierten Hinweises gemeldet. Diese Einstellung wirkt sich nicht auf Code aus, der unabhängig von der Typanalyse als unerreichbar eingestuft wird; solcher Code wird immer als unerreichbar gemeldet. Diese Einstellung hat auch keine Auswirkung, wenn Sie die Kommandozeilenversion von pyright verwenden, da diese nie getaggte Hinweise für nicht erreichbaren Code ausgibt.",
    "settings.python.analysis.typeEvaluation.enableTypeIgnoreComments.description": "PEP 484 definiert die Unterstützung für `# type: ignore`-Kommentare. Diese Option aktiviert oder deaktiviert die Unterstützung für diese Kommentare. Der Standardwert für diese Einstellung ist „true“. Dies wirkt sich nicht auf `# pyright: ignore`-Kommentare aus.",
    "settings.python.analysis.typeEvaluation.strictDictionaryInference.description": "Wenn Sie den Typ der Schlüssel und Werte eines Wörterbuchs ableiten, verwenden Sie strenge Typannahmen. Der Ausdruck `{'a': 1, 'b': 'a'}` könnte beispielsweise vom Typ `dict[str, Any]` oder `dict[str, int | str]` abgeleitet werden. Wenn diese Einstellung `true` ist, wird der letztere (strengere) Typ verwendet. Der Standardwert für diese Einstellung ist `false`.",
    "settings.python.analysis.typeEvaluation.strictListInference.description": "Verwenden Sie beim Ableiten des list Typs strenge Typannahmen. Beispielsweise könnte der Ausdruck `[1, 'a', 3.4]` vom Typ `list[Any]` oder `list[int | str | float]` abgeleitet werden. Wenn diese Einstellung `true` ist, wird der letztere (strengere) Typ verwendet. Der Standardwert für diese Einstellung ist `false`.",
    "settings.python.analysis.typeEvaluation.strictParameterNoneValue.description": "PEP 484 weist darauf hin, dass, wenn einem Funktionsparameter der Standardwert „None“ zugewiesen wird, sein Typ implizit „Optional“ sein sollte, auch wenn der explizite Typ dies nicht ist. Wenn diese Regel aktiviert ist, müssen die Anmerkungen zum Parametertyp in diesem Fall explizit „Optional“ verwenden. Der Standardwert für diese Einstellung ist „true“.",
    "settings.python.analysis.typeEvaluation.strictSetInference.description": "When inferring the type of a set, use strict type assumptions. For example, the expression `{1, 'a', 3.4}` could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeshedPaths.description": "Pfade zum Suchen nach typeshed Modulen.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "Verwenden Sie Bibliotheksimplementierungen, um Typinformationen zu extrahieren, wenn der Typstub nicht vorhanden ist.",
    "settings.python.analysis.userFileIndexingLimit.description": "Maximale Anzahl von Benutzerdateien, die im Arbeitsbereich indiziert werden sollen. Das Indizieren von Dateien ist eine leistungsintensive Aufgabe. Verwenden Sie diese Einstellung, um die Anzahl der Dateien einzuschränken, die indiziert werden sollen. Wenn Sie -1 eingeben, werden alle Dateien indiziert.",
    "settings.typecheckingMode.basic.description": "Alle Überprüfungsregeln vom Typ \"off\" + \"basic\".",
    "settings.typecheckingMode.off.description": "Diagnose für ungültige Syntax, nicht aufgelöste Importe und nicht definierte Variablen anzeigen.",
    "settings.typecheckingMode.standard.description": "Alle Überprüfungsregeln vom Typ \"basic\" + \"standard\".",
    "settings.typecheckingMode.strict.description": "Alle Überprüfungsregeln vom Typ \"standard\" + \"strict\"."
}
