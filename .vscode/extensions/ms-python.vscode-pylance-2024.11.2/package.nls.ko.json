{
    "ClientLoc.ServerRestart.crashMessage": "Pylance가 충돌했습니다.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Pylance가 충돌했습니다. Pylance를 실행할 Node.js 실행 파일을 선택하면 Pylance가 다시 시작됩니다.",
    "ClientLoc.ServerRestart.restartingMessage": "Node.js 사용하여 Pylance를 다시 시작하는 중...",
    "ClientLoc.ServerRestart.selectButton": "선택",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Node.js 실행 파일을 선택하여 Pylance 실행",
    "ClientLoc.askNodeSafetyQuestion": "Pylance가 {0}과(와) 함께 실행되도록 구성되었습니다. 이 실행 파일을 사용하여 Pylance를 실행하시겠습니까?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Python 자동 가져오기 완료 모드",
    "ClientLoc.autoImportCompletionsStatusItem.text": "자동 가져오기 완료: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "끄기로 전환",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "켜기로 전환",
    "ClientLoc.crashTooManyRestarts": "지난 3분 동안 Pylance가 5번 충돌했습니다. Pylance가 다시 시작되지 않습니다. 자세한 내용은 [이 링크](https://aka.ms/AApf7ox)를 확인하세요.",
    "ClientLoc.pylanceAndPythonPrereleaseExtensionMismatch": "Pylance 및 Python 확장에는 호환되지 않는 공유 종속성이 있습니다.\r\n두 확장이 모두 최신 시험판 버전인지 확인하세요.",
    "ClientLoc.pylanceAndPythonStableExtensionMismatch": "Pylance 및 Python 확장에는 호환되지 않는 공유 종속성이 있습니다.\r\n두 확장 모두 안정적인 최신 버전인지 확인하세요.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Python 유형 검사 모드",
    "ClientLoc.typeCheckingModeStatusItem.pickerPlaceholder": "현재 모드: {0}. 유형 검사 모드를 선택합니다.",
    "ClientLoc.typeCheckingModeStatusItem.pickerSettingsPage": "설정 페이지에서 보기",
    "ClientLoc.typeCheckingModeStatusItem.textFormatted": "형식 검사: {0}",
    "ClientLoc.typeCheckingModeStatusItem.textFormattedFromConfig": "형식 검사: {0}({1}에서)",
    "ClientLoc.typeCheckingModeStatusItem.title": "유형 검사 모드 선택",
    "ClientLoc.typeCheckingModeStatusItem.titleConfig": "구성 열기",
    "ClientLoc.updateSettingsErrorMsgFormatted": "‘{0}.{1}‘ 설정을 업데이트할 수 없습니다.",
    "Common.Help": "도움말",
    "Common.No": "아니요",
    "Common.Yes": "예",
    "Common.reload": "다시 로드",
    "Common.remindMeLater": "나중에 알림",
    "LanguageServer.settingsMigratedMessage": "Microsoft Language Server에 적용할 수 있는 설정이 Pylance 설정에 복사되었습니다. 자세한 내용은 settings.json 파일을 확인하세요.",
    "LanguageServer.settingsMigrationError": "다음 설정을 마이그레이션할 수 없습니다.",
    "LanguageServer.settingsNotOverridable": "pyrightconfig.json 또는 pyproject.toml을 사용하는 경우 '{0}'을(를) 설정할 수 없습니다.",
    "Refactoring.MoveSymbol.newFileDetail": "경로 입력 또는 대상 파일 선택",
    "Refactoring.MoveSymbol.newFileLabel": "대상 파일 경로 입력",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "선택",
    "Refactoring.MoveSymbol.openDialogTitle": "기호를 이동할 새 파일 선택...",
    "Refactoring.MoveSymbol.progressBarTitle": "기호를 다음으로 이동...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "대상 파일 검색",
    "Refactoring.MoveSymbol.quickPickTitle": "이동할 대상 선택",
    "Refactoring.MoveSymbol.separatorText": "대상 파일",
    "Refactoring.SearchImports.quickPickPlaceHolder": "가져오기 검색",
    "Refactoring.SearchImports.quickPickTitle": "일치하는 추가 가져오기 검색",
    "commands.pylance.docstrings.fold.title": "Pylance: 모든 문서 문자열 접기",
    "commands.pylance.docstrings.unfold.title": "Pylance: 모든 문서 문자열 펼치기",
    "commands.pylance.gotoOutputChannel.title": "Pylance: 출력 채널로 이동",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: 지속형 인덱스 모두 지우기",
    "commands.pylance.logging.start.title": "Pylance: 로깅 시작",
    "commands.pylance.logging.stop.title": "Pylance: 로깅 중지",
    "commands.pylance.profiling.start.title": "Pylance: 프로파일링 시작",
    "commands.pylance.profiling.stop.title": "Pylance: 프로파일링 중지",
    "commands.pylance.reportIssue.title": "Pylance: 문제 보고...",
    "settings.languageServerMode.default.description": "Pylance를 기본 설정으로 그대로 둡니다.",
    "settings.languageServerMode.description": "설정에 대해 미리 정의된 값의 집합을 선택합니다. 자세한 내용은 [이 링크](https://aka.ms/languageserver-mode)를 확인하세요.",
    "settings.languageServerMode.light.description": "Pylance를 필수 작업만 수행하도록 설정해 경량으로 만듭니다. 어떤 설정이 어떤 값으로 설정되는지 정확히 알아보려면 설명의 링크를 참조하세요.",
    "settings.python.analysis.aiCodeActions.description": "AI 지원 코드 작업을 활성화/비활성화합니다. Copilot Chat 확장 프로그램을 활성화해야 합니다.",
    "settings.python.analysis.aiCodeActions.implementAbstractClasses.description": "상속된 추상 클래스를 구현하기 위한 AI 지원을 활성화/비활성화합니다.",
    "settings.python.analysis.autoFormatStrings.description": "문자열에 '{'를 입력할 때 문자열 앞에 'f'를 자동으로 접두사로 추가합니다.",
    "settings.python.analysis.autoImportCompletions.description": "자동 가져오기 완료를 사용하도록 설정합니다.",
    "settings.python.analysis.autoIndent.description": "Python 코드를 입력할 때 언어 의미 체계에 따라 들여쓰기를 자동으로 조정합니다.",
    "settings.python.analysis.autoSearchPaths.description": "'src'와 같은 일반 검색 경로를 자동으로 추가합니다.",
    "settings.python.analysis.cacheLSPData.description": "빠른 완료를 위해 LSP 데이터를 캐시합니다. 실험적이면 Pylance의 작동이 중지될 수 있습니다.",
    "settings.python.analysis.completeFunctionParens.description": "함수 완성에 괄호를 추가합니다.",
    "settings.python.analysis.completionOverrideExperiment.description": "완료 재정의 동작에 대해 실험을 사용하거나 사용하지 않도록 설정합니다.",
    "settings.python.analysis.diagnosticMode.description": "진단을 표시하기 위한 분석 범위입니다.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "사용자가 개별 진단의 심각도 수준을 재정의할 수 있습니다. 규칙 이름을 키로 사용하고 \"error\", \"warning\", \"information\", \"none\", 'true'(\"error\"의 별칭) 또는 'false'(\"none\"의 별칭) 중 하나를 값으로 사용합니다. 각 진단에 대해 표시되는 기본값은 \"python.analysis.typeCheckingMode\"가 \"off\"로 설정된 경우 기본값입니다. 각 형식 검사 모드(\"off\", \"basic\" 및 \"strict\")의 기본값은 [여기](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults)를 참조하세요.",
    "settings.python.analysis.disableTaggedHints.description": "회색으로 표시된 텍스트 또는 취소선 텍스트에 특수 힌트를 사용하여 힌트 진단을 비활성화합니다.",
    "settings.python.analysis.displayEnglishDiagnostics.description": "VS Code 표시 언어와 관계없이 영어로 진단을 표시합니다.",
    "settings.python.analysis.enablePytestSupport.description": "Pylance에서 pytest 지원을 사용하도록 설정합니다.",
    "settings.python.analysis.enableSyncServer.description": "Use sync server mode [Experimental]. For internal use only, may cause Pylance to stop working.",
    "settings.python.analysis.exclude.description": "포함해서는 안 되는 디렉터리 또는 파일의 경로입니다. 이러한 디렉터리는 포함 디렉터리를 재정의하여 특정 하위 디렉터리를 제외할 수 있도록 합니다. 제외 경로의 파일은 제외되지 않은 원본 파일에서 참조(가져오기)되는 경우 분석에 계속 포함될 수 있습니다. 경로에는 와일드카드 문자 ** (디렉터리 또는 여러 수준의 디렉터리), * (0개 이상의 문자 시퀀스) 또는 ?가 포함될 수 있습니다. (단일 문자). 제외 경로를 지정하지 않으면 Pylance는 `**/node_modules`, `**/__pycache__`, `.git` 및 모든 가상 환경 디렉터리를 자동으로 제외합니다. 경로에 '${workspaceFolder:<workspaceName>}' 변수가 포함된 경우 glob 패턴은 다중 루트 작업 영역 환경의 해당 작업 영역에만 적용됩니다.",
    "settings.python.analysis.extraCommitChars.description": "해당하는 경우 '.', '('를 커밋 문자로 사용할 수 있습니다.",
    "settings.python.analysis.extraPaths.description": "추가 가져오기 검색 확인 경로",
    "settings.python.analysis.fixAll.description": "모든 수정 사항에서 실행할 소스 수정 사항입니다.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "모듈 이름처럼 보이는 문자열 리터럴의 경우 정의로 이동하여 모듈로 이동할 수 있습니다.",
    "settings.python.analysis.ignore.description": "포함된 파일이거나 포함된 파일의 전이적 닫기 내에 있더라도 진단 출력(오류 및 경고)을 표시하지 않아야 하는 디렉터리 또는 파일의 경로입니다. 경로에는 와일드카드 문자 ** (디렉터리 또는 여러 수준의 디렉터리), * (0개 이상의 문자 시퀀스) 또는 ?가 포함될 수 있습니다. (단일 문자). 경로에 '${workspaceFolder:<workspaceName>}' 변수가 포함된 경우 glob 패턴은 다중 루트 작업 영역 환경의 해당 작업 영역에만 적용됩니다.",
    "settings.python.analysis.importFormat.description": "모듈을 가져오기 위한 기본 형식을 정의합니다.",
    "settings.python.analysis.include.description": "포함해야 하는 디렉터리 또는 파일의 경로입니다. 경로를 지정하지 않으면 Pylance는 기본적으로 작업 영역 루트 디렉터리로 설정됩니다. 경로에는 와일드카드 문자 ** (디렉터리 또는 여러 수준의 디렉터리), * (0개 이상의 문자 시퀀스) 또는 ?가 포함될 수 있습니다. (단일 문자). 경로에 '${workspaceFolder:<workspaceName>}' 변수가 포함된 경우 glob 패턴은 다중 루트 작업 영역 환경의 해당 작업 영역에만 적용됩니다.",
    "settings.python.analysis.includeAliasesFromUserFiles.description": "사용자 파일의 별칭 기호를 포함합니다. 이렇게 하면 별칭 기호가 '가져오기 추가', '자동 가져오기'와 같은 기능에 표시됩니다.",
    "settings.python.analysis.indexing.description": "자동 가져오기, 가져오기 추가, 작업 영역 기호 등과 같은 언어 기능에 대해 설치된 타사 라이브러리 및 사용자 파일의 인덱싱을 사용하도록 설정합니다.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "호출 인수 이름에 대한 인레이 힌트를 사용하거나 사용하지 않도록 설정합니다:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "함수 반환 형식에 대한 인레이 힌트를 사용하거나 사용하지 않도록 설정합니다:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "pytest 함수 매개 변수 형식에 대한 인레이 힌트를 사용하거나 사용하지 않도록 설정합니다:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "변수 형식에 대한 인레이 힌트를 활성화/비활성화합니다. 리터럴 또는 상수 할당에 대한 힌트가 표시되지 않습니다:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "출력 패널에 대한 로깅 수준을 지정합니다.",
    "settings.python.analysis.nodeExecutable.description": "언어 서버를 실행하는 데 사용할 Node.js 실행 파일의 경로입니다. 지정하지 않으면 언어 서버는 VS Code와 함께 제공된 Node.js 실행 파일을 사용합니다. Pylance에 메모리가 부족한 경우 이 옵션을 설정합니다. 자세한 내용은 [여기](https://aka.ms/AApf7ox)를 참조하세요.",
    "settings.python.analysis.packageIndexDepths.description": "설치된 패키지에서 패키지별로 인덱싱할 수준 수를 재정의하는 데 사용되었습니다. 기본적으로 최상위 모듈만 인덱싱됩니다(depth = 1). 하위 모듈을 인덱싱하려면 인덱싱하려는 하위 모듈의 각 수준에 대해 depth를 1씩 늘입니다. 허용되는 값은 다음과 같습니다.\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\n'includeAllSymbols'가 'false'로 설정된 경우 각 패키지의 '__all__'에 있는 기호만 포함됩니다. 'true'로 설정하면 Pylance는 파일의 모든 모듈/최상위 기호 선언을 인덱싱합니다.  \r\n  \r\n사용 예제: \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "모든 타사 라이브러리에 대한 인덱스는 디스크에 유지됩니다.",
    "settings.python.analysis.regenerateStdLibIndices.description": "모든 Python 버전에 대해 공유 stdlib.json 인덱스에 의존하는 대신 각 작업 영역의 특정 Python 버전 및 플랫폼에 맞게 조정된 고유한 인덱스를 생성합니다. 이 다시 생성 프로세스는 미리 빌드된 stdlib 인덱스를 사용하는 것과 달리 성능에 영향을 줍니다.",
    "settings.python.analysis.reportExtraTelemetry.description": "추가 원격 분석 보고 [실험적]. 내부용으로만 Pylance 속도가 느려질 수 있습니다.",
    "settings.python.analysis.stubPath.description": "사용자 지정 형식 스텁 파일을 포함하는 디렉터리의 경로입니다.",
    "settings.python.analysis.supportDocstringTemplate.description": "문서 문자열 생성에 대한 지원을 활성화/비활성화합니다. 빈 문서 문자열에서 'Ctrl+Space'를 사용하여 문서 문자열을 생성합니다.",
    "settings.python.analysis.supportRestructuredText.description": "docstrings에서 reStructuredText 지원을 활성화/비활성화합니다. 실험적이며, docstrings가 더 이상 렌더링되지 않을 수 있습니다.",
    "settings.python.analysis.typeEvaluation.analyzeUnannotatedFunctions.description": "입력 매개 변수나 반환 형식에 대한 형식 주석이 없는 함수 및 메서드의 오류를 분석하고 보고합니다. 이 설정의 기본값은 'true'입니다.",
    "settings.python.analysis.typeEvaluation.deprecateTypingAliases.description": "PEP 585는 제네릭을 지원하기 위해서만 도입된 표준 컬렉션의 형에 대한 별칭이 Python 3.9부터 더 이상 사용되지 않음을 나타냅니다. 이 스위치는 이러한 별칭을 더 이상 사용되지 않는 것으로 취급할지 여부를 제어합니다. 이는 pythonVersion이 3.9 이상인 경우에만 적용됩니다. 이 설정의 기본값은 'false'이지만 나중에 'true'로 전환될 수 있습니다.",
    "settings.python.analysis.typeEvaluation.disableBytesTypePromotions.description": "`bytearray` 및 `memoryview`가 `bytes`의 하위 유형으로 간주되는 레거시 동작을 비활성화합니다. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes)에서 이 동작은 더 이상 사용되지 않지만 이전 동작을 복원하기 위해 이 스위치가 제공됩니다. 이 설정의 기본값은 'false'입니다.",
    "settings.python.analysis.typeEvaluation.enableExperimentalFeatures.description": "Python 입력 표준에 대한 제안 또는 탐색적 변경에 해당하는 실험적(대부분 문서화되지 않은) 기능 집합을 활성화합니다. 이러한 기능은 변경되거나 제거될 가능성이 있으므로 실험 목적 외에는 사용해서는 안 됩니다. 이 설정의 기본값은 `false`입니다.",
    "settings.python.analysis.typeEvaluation.enableReachabilityAnalysis.description": "활성화하면 형식 분석에서 도달할 수 없는 것으로 판단되는 코드가 태그가 지정된 힌트를 사용하여 보고됩니다. 이 설정은 형식 분석에 관계없이 연결할 수 없는 것으로 판단되는 코드에는 영향을 미치지 않으며, 이러한 코드는 항상 연결할 수 없는 것으로 보고됩니다. 이 설정은 연결할 수 없는 코드에 대해 태그가 지정된 힌트를 표시하지 않으므로 명령줄 버전의 pyright를 사용할 때도 적용되지 않습니다.",
    "settings.python.analysis.typeEvaluation.enableTypeIgnoreComments.description": "PEP 484는 `# type: ignore` 메모에 대한 지원을 정의합니다. 이 스위치는 이러한 메모에 대한 지원을 활성화 또는 비활성화합니다. 이 설정의 기본값은 'true'입니다. 이것은 `# pyright: ignore` 메모에는 영향을 미치지 않습니다.",
    "settings.python.analysis.typeEvaluation.strictDictionaryInference.description": "사전의 키와 값의 형식을 추론할 때는 엄격한 형식 가정을 사용하세요. 예를 들어 식 `{'a': 1, 'b': 'a'}`는 `dict[str, Any]` 또는 `dict[str, int | str]` 형식으로 유추될 수 있습니다. 이 설정이 true이면 후자(엄격한) 형식을 사용합니다. 이 설정의 기본값은 'false'입니다.",
    "settings.python.analysis.typeEvaluation.strictListInference.description": "When inferring the type of a list, use strict type assumptions. For example, the expression `[1, 'a', 3.4]` could be inferred to be of type `list[Any]` or `list[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeEvaluation.strictParameterNoneValue.description": "PEP 484는 함수 매개 변수에 기본값이 None으로 할당된 경우 명시적 형식이 아니더라도 해당 형식이 암시적으로 Optional이어야 함을 나타냅니다. 이 규칙을 활성화하면 이 경우 매개 변수 형식 주석이 Optional을 명시적으로 사용해야 합니다. 이 설정의 기본값은 'true'입니다.",
    "settings.python.analysis.typeEvaluation.strictSetInference.description": "When inferring the type of a set, use strict type assumptions. For example, the expression `{1, 'a', 3.4}` could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeshedPaths.description": "typeshed 모듈을 찾을 경로입니다.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "형식 스텁이 없는 경우 라이브러리 구현을 사용하여 형식 정보를 추출합니다.",
    "settings.python.analysis.userFileIndexingLimit.description": "작업 영역에서 인덱싱할 최대 사용자 파일 수입니다. 파일 인덱싱은 성능 집약적인 작업입니다. 인덱싱할 파일 수를 제한하려면 이 설정을 사용하세요. -1을 입력하면 모든 파일을 인덱싱합니다.",
    "settings.typecheckingMode.basic.description": "\"off\" + \"basic\" 유형 검사 규칙의 모든 규칙입니다.",
    "settings.typecheckingMode.off.description": "잘못된 구문, 확인되지 않은 가져오기, 정의되지 않은 변수에 대한 진단을 표시합니다.",
    "settings.typecheckingMode.standard.description": "\"basic\" + \"standard\" 유형 검사 규칙의 모든 규칙입니다.",
    "settings.typecheckingMode.strict.description": "\"standard\" + \"strict\" 유형 검사 규칙의 모든 규칙입니다."
}
