{
    "ClientLoc.ServerRestart.crashMessage": "O Pylance falhou.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "O Pylance falhou. O Pylance será reiniciado quando você selecionar um executável Node.js para executar o Pylance.",
    "ClientLoc.ServerRestart.restartingMessage": "Reiniciando o Pylance usando Node.js...",
    "ClientLoc.ServerRestart.selectButton": "Selecionar",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Selecione o executável Node.js para executar o Pylance",
    "ClientLoc.askNodeSafetyQuestion": "O Pylance está configurado para ser executado com o {0}.  Deseja usar esse executável para executar o Pylance?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Modo de Conclusões de Importação Automática do Python",
    "ClientLoc.autoImportCompletionsStatusItem.text": "Conclusões de Importação Automática: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "Alternar para desativado",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "Alternar para ativado",
    "ClientLoc.crashTooManyRestarts": "O Pylance falhou cinco vezes nos últimos três minutos. O Pylance não será reiniciado. Verifique [este link](https://aka.ms/AApf7ox) para obter mais detalhes.",
    "ClientLoc.pylanceAndPythonPrereleaseExtensionMismatch": "As extensões Pylance e Python têm dependências compartilhadas incompatíveis.\r\nCertifique-se de que ambas as extensões estejam na versão de pré-lançamento mais recente.",
    "ClientLoc.pylanceAndPythonStableExtensionMismatch": "As extensões Pylance e Python têm dependências compartilhadas incompatíveis.\r\nCertifique-se de que ambas as extensões estejam na versão estável mais recente.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Modo de Verificação de Tipo do Python",
    "ClientLoc.typeCheckingModeStatusItem.pickerPlaceholder": "Modo atual: {0}. Selecione o modo de verificação de tipo.",
    "ClientLoc.typeCheckingModeStatusItem.pickerSettingsPage": "exibição na página de configurações",
    "ClientLoc.typeCheckingModeStatusItem.textFormatted": "Verificação de Tipo: {0}",
    "ClientLoc.typeCheckingModeStatusItem.textFormattedFromConfig": "Verificação de tipo: {0} (de {1})",
    "ClientLoc.typeCheckingModeStatusItem.title": "Selecione o modo de verificação de tipo",
    "ClientLoc.typeCheckingModeStatusItem.titleConfig": "Abrir configuração",
    "ClientLoc.updateSettingsErrorMsgFormatted": "Falha ao atualizar a configuração \"{0}.{1}\".",
    "Common.Help": "Ajuda",
    "Common.No": "Não",
    "Common.Yes": "Sim",
    "Common.reload": "Recarregar",
    "Common.remindMeLater": "Lembrar mais tarde",
    "LanguageServer.settingsMigratedMessage": "As configurações aplicáveis ao Microsoft Language Server foram copiadas para as configurações do Pylance. Consulte os arquivos settings.json para obter detalhes.",
    "LanguageServer.settingsMigrationError": "Não foi possível migrar as seguintes configurações:",
    "LanguageServer.settingsNotOverridable": "\"{0}\" não pode ser definido quando um pyrightconfig.json ou pyproject.toml está sendo usado.",
    "Refactoring.MoveSymbol.newFileDetail": "Insira o caminho ou selecione o arquivo de destino",
    "Refactoring.MoveSymbol.newFileLabel": "Inserir o caminho do arquivo de destino",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "Selecionar",
    "Refactoring.MoveSymbol.openDialogTitle": "Selecione o novo arquivo para o qual mover o símbolo...",
    "Refactoring.MoveSymbol.progressBarTitle": "Mover símbolo para...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "Pesquisar arquivo de destino",
    "Refactoring.MoveSymbol.quickPickTitle": "Selecione o destino para mover",
    "Refactoring.MoveSymbol.separatorText": "Arquivos de Destino",
    "Refactoring.SearchImports.quickPickPlaceHolder": "Pesquisar importações",
    "Refactoring.SearchImports.quickPickTitle": "Pesquisar importações correspondentes adicionais",
    "commands.pylance.docstrings.fold.title": "Pylance: Dobrar Todos os Docstrings",
    "commands.pylance.docstrings.unfold.title": "Pylance: Desdobrar Todos os Docstrings",
    "commands.pylance.gotoOutputChannel.title": "Pylance: ir para o canal de saída",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: Limpar Todos os Índices Persistentes",
    "commands.pylance.logging.start.title": "Pylance: iniciar registro em log",
    "commands.pylance.logging.stop.title": "Pylance: parar registro em log",
    "commands.pylance.profiling.start.title": "Pylance: Iniciar Criação de Perfil",
    "commands.pylance.profiling.stop.title": "Pylance: Interromper Criação de Perfil",
    "commands.pylance.reportIssue.title": "Pylance: Relatar Problema...",
    "settings.languageServerMode.default.description": "Deixe o Pylance com as configurações padrão.",
    "settings.languageServerMode.description": "Selecione um conjunto predefinido de valores para configurações. Verifique [este link](https://aka.ms/languageserver-mode) para obter mais detalhes.",
    "settings.languageServerMode.light.description": "Defina o Pylance para fazer apenas o trabalho que é essencial para torná-lo mais leve. Consulte o link na descrição para descobrir exatamente quais configurações estão definidas para qual valor.",
    "settings.python.analysis.aiCodeActions.description": "Ativar/desativar ações de código assistidas por IA. Requer que a extensão de Copilot Chat esteja habilitada.",
    "settings.python.analysis.aiCodeActions.implementAbstractClasses.description": "Habilitar/desabilitar a assistência de IA para implementar classes abstratas herdadas.",
    "settings.python.analysis.autoFormatStrings.description": "Ao digitar um ''{'' em uma cadeia de caracteres, prefixe automaticamente a cadeia de caracteres com um ''f''.",
    "settings.python.analysis.autoImportCompletions.description": "Habilitar preenchimentos de importação automática.",
    "settings.python.analysis.autoIndent.description": "Ajuste automaticamente a indentação com base na semântica da linguagem ao digitar um código Python.",
    "settings.python.analysis.autoSearchPaths.description": "Adicione automaticamente os caminhos de pesquisa comuns como ''src''.",
    "settings.python.analysis.cacheLSPData.description": "Armazene dados LSP em cache para obter conclusões mais rápidas. Experimental, pode fazer com que o Pylance pare de funcionar.",
    "settings.python.analysis.completeFunctionParens.description": "Adicionar parênteses às conclusões da função.",
    "settings.python.analysis.completionOverrideExperiment.description": "Habilitar/desabilitar o experimento no comportamento de substituição de conclusão.",
    "settings.python.analysis.diagnosticMode.description": "Escopo de análise para mostrar o diagnóstico.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "Permite que um usuário substitua os níveis de severidade para diagnósticos individuais. Use o nome da regra como uma chave e um de \"error\", \"warning\", \"information\", \"none\", `true` (alias para \"error\") ou `false` (alias para \"none\") como valor. O valor padrão mostrado para cada diagnóstico é o padrão quando \"python.analysis.typeCheckingMode\" estiver definido como \"off\". Confira [aqui](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) para obter os padrões para cada modo de verificação de tipo (\"off\", \"basic\" e \"strict\").",
    "settings.python.analysis.disableTaggedHints.description": "Desabilite o diagnóstico de dicas com dicas especiais para texto esmaecido ou tachado.",
    "settings.python.analysis.displayEnglishDiagnostics.description": "Exibir diagnósticos em Inglês, independentemente do idioma de exibição do VS Code.",
    "settings.python.analysis.enablePytestSupport.description": "Habilita o suporte ao pytest no Pylance.",
    "settings.python.analysis.enableSyncServer.description": "Use o modo de sync server [Experimental]. Somente para uso interno, pode fazer com que o Pylance pare de funcionar.",
    "settings.python.analysis.exclude.description": "Caminhos de diretórios ou arquivos que não devem ser incluídos. Eles substituem os diretórios de inclusão, permitindo a exclusão de subdiretórios específicos. Observe que os arquivos nos caminhos de exclusão ainda poderão ser incluídos na análise se forem referenciados (importados) por arquivos de origem que não foram excluídos. Os caminhos podem conter caracteres curinga ** (um diretório ou vários níveis de diretórios), * (uma sequência de zero ou mais caracteres) ou ? (um único caractere). Se nenhum caminho de exclusão for especificado, o Pylance exclui automaticamente o seguinte: `**/node_modules`, `**/__pycache__`, `.git` e quaisquer diretórios de ambiente virtual. Se o caminho contiver uma variável “${workspaceFolder:<workspaceName>}”, o padrão glob será aplicado apenas ao espaço de trabalho correspondente em um ambiente de espaço de trabalho multi-raiz.",
    "settings.python.analysis.extraCommitChars.description": "Permitir o uso de ''.'', ''('' como caracteres de confirmação quando aplicável.",
    "settings.python.analysis.extraPaths.description": "Caminhos de resolução de pesquisa de importação adicionais",
    "settings.python.analysis.fixAll.description": "correções de origem a serem executadas para corrigir tudo.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "Para literais de cadeia de caracteres que se parecem com os nomes de módulo, permite ir para definição para ir para o módulo.",
    "settings.python.analysis.ignore.description": "Caminhos de diretórios ou arquivos cuja saída de diagnóstico (erros e avisos) devem ser suprimidas mesmo que sejam um arquivo incluído ou dentro do fechamento transitivo de um arquivo incluído. Os caminhos podem conter caracteres curinga ** (um diretório ou vários níveis de diretórios), * (uma sequência de zero ou mais caracteres) ou ? (um único caractere). Se o caminho contiver uma variável “${workspaceFolder:<workspaceName>}”, o padrão glob será aplicado apenas ao espaço de trabalho correspondente em um ambiente de espaço de trabalho multi-raiz.",
    "settings.python.analysis.importFormat.description": "Define o formato padrão para importar módulos.",
    "settings.python.analysis.include.description": "Caminhos de diretórios ou arquivos que devem ser incluídos. Se nenhum caminho for especificado, o padrão do Pylance é o diretório raiz do espaço de trabalho. Os caminhos podem conter caracteres curinga ** (um diretório ou vários níveis de diretórios), * (uma sequência de zero ou mais caracteres) ou ? (um único caractere). Se o caminho contiver uma variável “${workspaceFolder:<workspaceName>}”, o padrão glob será aplicado apenas ao espaço de trabalho correspondente em um ambiente de espaço de trabalho multi-raiz.",
    "settings.python.analysis.includeAliasesFromUserFiles.description": "Incluir símbolos de alias de arquivos de usuário. Isso fará com que os símbolos de alias apareçam em recursos como `adicionar importação`, `importação automática`",
    "settings.python.analysis.indexing.description": "Habilite a indexação de bibliotecas de terceiros e arquivos de usuário instalados para recursos de idioma como importação automática, adição de importação, símbolos de workspace e etc.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "Habilitar/desabilitar dicas embutidas para nomes de argumentos de chamada:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "Habilitar/desabilitar dicas embutidas para tipos de retorno de função:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "Habilitar/desabilitar dicas embutidas para tipos de parâmetros de função pytest:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "Enable/disable inlay hints for variable types. Hints are not displayed for assignments of literals or constants:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "Especifica o nível de registro do painel Saída",
    "settings.python.analysis.nodeExecutable.description": "Caminho para um executável Node.js a ser usado para executar o servidor de idiomas. Se não for especificado, o servidor de idiomas usará o executável Node.js que vem com o VS Code. Defina essa opção se estiver tendo problemas com a falta de memória do Pylance. Consulte [aqui](https://aka.ms/AApf7ox) para obter mais informações.",
    "settings.python.analysis.packageIndexDepths.description": "Usado para substituir quantos níveis abaixo dos pacotes instalados são indexados por pacote. Por padrão, somente os módulos de nível superior são indexados (depth = 1). Para indexar submódulos, aumente depth em 1 para cada nível de submódulo que você deseja indexar. Os valores aceitos são:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\nSe `includeAllSymbols` estiver definido como `false`, somente os símbolos no `__all__` de cada pacote serão incluídos. Quando definido como `true`, o Pylance indexará todas as declarações de símbolo de nível superior/módulo no arquivo.  \r\n  \r\nExemplo de uso: \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "Os índices de todas as bibliotecas de terceiros serão mantidos no disco.",
    "settings.python.analysis.regenerateStdLibIndices.description": "Em vez de depender dos índices stdlib.json compartilhados com todas as versões do Python, gere índices exclusivos ajustados para a versão e a plataforma específicas do Python de cada espaço de trabalho. Esse processo de regeneração afetará o desempenho, ao contrário do uso dos índices stdlib predefinidos.",
    "settings.python.analysis.reportExtraTelemetry.description": "Relatório de telemetria extra [Experimental]. Somente para uso interno, pode causar lentidão no Pylance.",
    "settings.python.analysis.stubPath.description": "Caminho para o diretório que contém arquivos stub de tipo personalizado.",
    "settings.python.analysis.supportDocstringTemplate.description": "Ativar/desativar o suporte para geração de docstring. Em uma docstring em branco, use `Ctrl+Space` para gerar uma docstring.",
    "settings.python.analysis.supportRestructuredText.description": "Enable/disable support for reStructuredText in docstrings. Experimental, may cause docstrings to no longer render.",
    "settings.python.analysis.typeEvaluation.analyzeUnannotatedFunctions.description": "Analise e relate erros de funções e métodos que não têm anotações de tipo para parâmetros de entrada ou tipos de retorno. O valor padrão desta configuração é 'true'.",
    "settings.python.analysis.typeEvaluation.deprecateTypingAliases.description": "PEP 585 indica que os aliases para tipos em coleções padrão que foram introduzidos exclusivamente para dar suporte a genéricos estão preteridos a partir do Python 3.9. Essa opção controla se eles são tratados como preteridos. Isso se aplica somente quando pythonVersion for 3.9 ou mais recente. O valor padrão desta configuração é 'false', mas pode ser alternado para 'true' no futuro.",
    "settings.python.analysis.typeEvaluation.disableBytesTypePromotions.description": "Desabilita o comportamento herdado em que `bytearray` e `memoryview` são considerados subtipos de `bytes`. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) pretere esse comportamento, mas essa opção é fornecida para restaurar o comportamento mais antigo. O valor padrão para essa configuração é `false`.",
    "settings.python.analysis.typeEvaluation.enableExperimentalFeatures.description": "Habilita um conjunto de recursos experimentais (principalmente não documentados) que correspondem a alterações propostas ou exploratórias no padrão de tipificação do Python. Esses recursos provavelmente serão alterados ou removidos, portanto, eles não devem ser usados, exceto para fins de experimentação. O valor padrão para essa configuração é `false`.",
    "settings.python.analysis.typeEvaluation.enableReachabilityAnalysis.description": "Se habilitado, o código que é determinado como inacessível pela análise de tipo será relatado usando uma dica marcada. Esta configuração não afeta o código que é determinado como inacessível, independentemente da análise de tipo; esse código será sempre relatado como inacessível. Esta configuração também não tem efeito ao usar a versão de linha de comando do pyright porque ela nunca emite dicas marcadas para código inacessível.",
    "settings.python.analysis.typeEvaluation.enableTypeIgnoreComments.description": "PEP 484 define o suporte para comentários de `# type: ignore`. Esta opção habilita ou desabilita o suporte para esses comentários. O valor padrão desta configuração é `true`. Isso não afeta os comentários de `# pyright: ignore`.",
    "settings.python.analysis.typeEvaluation.strictDictionaryInference.description": "Ao inferir o tipo de chaves e valores de um dicionário, use suposições de tipo estrito. Por exemplo, a expressão `{'a': 1, 'b': 'a'}` pode ser inferida como do tipo `dict[str, Any]` ou `dict[str, int | str]`. Se esta configuração for true, ela usará o último tipo (mais estrito). O valor padrão para essa configuração é `false`.",
    "settings.python.analysis.typeEvaluation.strictListInference.description": "Ao inferir o tipo de uma lista, use suposições de tipo estrito. Por exemplo, a expressão `[1, 'a', 3.4]` pode ser inferida como do tipo `list[Any]` ou `list[int | str | float]`. Se esta configuração for true, ela usará o último tipo (mais estrito). O valor padrão para essa configuração é `false`.",
    "settings.python.analysis.typeEvaluation.strictParameterNoneValue.description": "PEP 484 indica que, quando um parâmetro de função recebe um valor padrão None, seu tipo deve ser implicitamente Optional, mesmo que o tipo explícito não seja. Quando habilitada, esta regra requer que as anotações de tipo de parâmetro usem Optional explicitamente nesse caso. O valor padrão desta configuração é `true`.",
    "settings.python.analysis.typeEvaluation.strictSetInference.description": "When inferring the type of a set, use strict type assumptions. For example, the expression `{1, 'a', 3.4}` could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeshedPaths.description": "Caminhos para procurar módulos com typeshed.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "Use implementações de biblioteca para extrair informações de tipo quando o tipo stub não estiver presente.",
    "settings.python.analysis.userFileIndexingLimit.description": "Número máximo de arquivos de usuário a serem indexados no workspace. A indexação de arquivos é uma tarefa de alto desempenho. Use essa configuração para limitar o número de arquivos que você deseja indexar. Se você inserir -1, indexaremos todos os arquivos.",
    "settings.typecheckingMode.basic.description": "Todas as regras de verificação do tipo \"off\" + \"basic\".",
    "settings.typecheckingMode.off.description": "Mostrar diagnósticos de sintaxe inválida, importações não resolvidas, variáveis indefinidas.",
    "settings.typecheckingMode.standard.description": "Todas as regras de verificação do tipo \"basic\" + \"standard\".",
    "settings.typecheckingMode.strict.description": "Todas as regras de verificação do tipo \"standard\" + \"strict\"."
}
