{
    "ClientLoc.ServerRestart.crashMessage": "Pylance se ha bloqueado.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Pylance se ha bloqueado. Pylance se reiniciará cuando seleccione una Node.js ejecutable para ejecutar Pylance.",
    "ClientLoc.ServerRestart.restartingMessage": "Reiniciando Pylance con Node.js...",
    "ClientLoc.ServerRestart.selectButton": "Seleccionar",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Seleccione Node.js ejecutable para ejecutar Pylance",
    "ClientLoc.askNodeSafetyQuestion": "Pylance está configurado para ejecutarse con {0}. ¿Desea usar este ejecutable para ejecutar Pylance?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Modo de finalización de importación automática de Python",
    "ClientLoc.autoImportCompletionsStatusItem.text": "Finalizaciones de importación automática: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "Cambiar a desactivado",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "Cambiar a activado",
    "ClientLoc.crashTooManyRestarts": "Pylance se ha bloqueado cinco veces en los últimos 3 minutos. Pylance no se reiniciará. Consulte [este vínculo](https://aka.ms/AApf7ox) para obtener más detalles.",
    "ClientLoc.pylanceAndPythonPrereleaseExtensionMismatch": "Pylance y la extensión de Python tienen dependencias compartidas incompatibles.\r\nAsegúrese de que ambas extensiones son la versión preliminar más reciente.",
    "ClientLoc.pylanceAndPythonStableExtensionMismatch": "Pylance y la extensión de Python tienen dependencias compartidas incompatibles.\r\nAsegúrese de que ambas extensiones son la versión estable más reciente.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Modo de comprobación de tipos en Python",
    "ClientLoc.typeCheckingModeStatusItem.pickerPlaceholder": "Modo actual: {0}. Seleccione el modo de comprobación de tipos.",
    "ClientLoc.typeCheckingModeStatusItem.pickerSettingsPage": "ver en la página de configuración",
    "ClientLoc.typeCheckingModeStatusItem.textFormatted": "Comprobación de tipos: {0}",
    "ClientLoc.typeCheckingModeStatusItem.textFormattedFromConfig": "Comprobación de tipos: {0} (de {1})",
    "ClientLoc.typeCheckingModeStatusItem.title": "Seleccionar modo de comprobación de tipos",
    "ClientLoc.typeCheckingModeStatusItem.titleConfig": "Abrir configuración",
    "ClientLoc.updateSettingsErrorMsgFormatted": "No se pudo actualizar la configuración '{0}.{1}'.",
    "Common.Help": "Ayuda",
    "Common.No": "No",
    "Common.Yes": "Sí",
    "Common.reload": "Recargar",
    "Common.remindMeLater": "Recordármelo más tarde",
    "LanguageServer.settingsMigratedMessage": "La configuración aplicable a Microsoft Language Server se copió en la configuración de Pylance. Compruebe los archivos settings.json para obtener más información.",
    "LanguageServer.settingsMigrationError": "No se ha podido migrar la siguiente configuración:",
    "LanguageServer.settingsNotOverridable": "'{0}' no se puede establecer cuando se usa un pyrightconfig.json o pyproject.toml.",
    "Refactoring.MoveSymbol.newFileDetail": "Introduzca la ruta o seleccione el archivo de destino",
    "Refactoring.MoveSymbol.newFileLabel": "Introduzca la ruta del archivo de destino",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "Seleccionar",
    "Refactoring.MoveSymbol.openDialogTitle": "Seleccione el nuevo archivo al que mover el símbolo...",
    "Refactoring.MoveSymbol.progressBarTitle": "Mover símbolo a...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "Buscar archivo de destino",
    "Refactoring.MoveSymbol.quickPickTitle": "Seleccione el destino del traslado",
    "Refactoring.MoveSymbol.separatorText": "Archivos de destino",
    "Refactoring.SearchImports.quickPickPlaceHolder": "Buscar importaciones",
    "Refactoring.SearchImports.quickPickTitle": "Buscar importaciones coincidentes adicionales",
    "commands.pylance.docstrings.fold.title": "Pylance: Plegar todas las cadenas de documentos",
    "commands.pylance.docstrings.unfold.title": "Pylance: Desplegar todas las cadenas de documentos",
    "commands.pylance.gotoOutputChannel.title": "Pylance: ir al canal de salida",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: borrar todos los índices persistentes",
    "commands.pylance.logging.start.title": "Pylance: iniciar registro",
    "commands.pylance.logging.stop.title": "Pylance: detener el registro",
    "commands.pylance.profiling.start.title": "Pylance: iniciar generación de perfiles",
    "commands.pylance.profiling.stop.title": "Pylance: detener generación de perfiles",
    "commands.pylance.reportIssue.title": "Pylance: notificar problema...",
    "settings.languageServerMode.default.description": "Dejar Pylance con la configuración predeterminada.",
    "settings.languageServerMode.description": "Seleccione un conjunto predefinido de valores para la configuración. Consulte [este vínculo](https://aka.ms/languageserver-mode) para obtener más detalles.",
    "settings.languageServerMode.light.description": "Establezca Pylance para que solo realice el trabajo esencial para que sea ligero. Vea el vínculo que aparece en la descripción para saber exactamente qué configuración se establece y con qué valor.",
    "settings.python.analysis.aiCodeActions.description": "Habilite o deshabilite las acciones de código asistidas por IA. Requiere que la extensión de Copilot Chat esté habilitada.",
    "settings.python.analysis.aiCodeActions.implementAbstractClasses.description": "Habilita o deshabilita la asistencia de IA para implementar clases abstractas heredadas.",
    "settings.python.analysis.autoFormatStrings.description": "Al escribir \"{\" en una cadena, anteponer automáticamente a la cadena un prefijo \"f\".",
    "settings.python.analysis.autoImportCompletions.description": "Habilite las finalizaciones de importación automática.",
    "settings.python.analysis.autoIndent.description": "Ajuste automáticamente la sangría en función de la semántica del lenguaje al escribir código de Python.",
    "settings.python.analysis.autoSearchPaths.description": "Agregue automáticamente rutas de búsqueda comunes como \"src\".",
    "settings.python.analysis.cacheLSPData.description": "Almacene en caché los datos de LSP para completar más rápido. Experimental, puede hacer que Pylance deje de funcionar.",
    "settings.python.analysis.completeFunctionParens.description": "Agregue paréntesis a las finalizaciones de función.",
    "settings.python.analysis.completionOverrideExperiment.description": "Habilitar o deshabilitar el experimento en el comportamiento de invalidación de finalización.",
    "settings.python.analysis.diagnosticMode.description": "Ámbito de análisis para mostrar diagnósticos.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "Permite que un usuario invalide los niveles de gravedad para diagnósticos individuales. Use el nombre de la regla como clave y uno de \"error\", \"warning\", \"information\", \"none\", \"true\" (alias para \"error\") o \"false\" (alias para \"none\") como valor. El valor predeterminado que se muestra para cada diagnóstico es el predeterminado cuando \"python.analysis.typeCheckingMode\" se establece en \"off\". Vea [aquí](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) los valores predeterminados para cada modo de comprobación de tipos (\"off\", \"basic\" y \"strict\").",
    "settings.python.analysis.disableTaggedHints.description": "Deshabilite los diagnósticos de sugerencias con sugerencias especiales para texto atenuado o tachado.",
    "settings.python.analysis.displayEnglishDiagnostics.description": "Muestra los diagnósticos en inglés independientemente del idioma para mostrar de VS Code.",
    "settings.python.analysis.enablePytestSupport.description": "Habilita la compatibilidad con pytest en Pylance.",
    "settings.python.analysis.enableSyncServer.description": "Use el modo de sync server [Experimental]. Solo para uso interno, puede hacer que Pylance deje de funcionar.",
    "settings.python.analysis.exclude.description": "Rutas de acceso de directorios o archivos que no se deben incluir. Estas invalidan los directorios de inclusión, lo que permite excluir subdirectorios específicos. Tenga en cuenta que los archivos de las rutas de acceso de exclusión todavía se pueden incluir en el análisis si los archivos de origen que no se excluyen hacen referencia a ellos (importados). Las rutas de acceso pueden contener caracteres comodín ** (un directorio o varios niveles de directorios), * (una secuencia de cero o más caracteres) o ? (un solo carácter). Si no se especifica ninguna ruta de acceso de exclusión, Pylance excluye automáticamente lo siguiente: `**/node_modules`, `**/__pycache__`, `, `.git` y cualquier directorio de entorno virtual. Si la ruta de acceso contiene una variable \"${workspaceFolder:<workspaceName>}\", el patrón global solo se aplicará al área de trabajo correspondiente en un entorno de área de trabajo raíz múltiple.",
    "settings.python.analysis.extraCommitChars.description": "Permitir el uso de '.', '(' como caracteres de confirmación cuando corresponda.",
    "settings.python.analysis.extraPaths.description": "Rutas de resolución de búsqueda de importación adicionales",
    "settings.python.analysis.fixAll.description": "correcciones de origen para ejecutarlas todas.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "Para los literales de cadena que tienen un aspecto similar a los nombres de módulo, permite ir a la definición para ir al módulo.",
    "settings.python.analysis.ignore.description": "Rutas de acceso de directorios o archivos cuya salida de diagnóstico (errores y advertencias) se debe suprimir incluso si son un archivo incluido o dentro del cierre transitivo de un archivo incluido. Las rutas de acceso pueden contener caracteres comodín ** (un directorio o varios niveles de directorios), * (una secuencia de cero o más caracteres) o ? (un solo carácter). Si la ruta de acceso contiene una variable \"${workspaceFolder:<workspaceName>}\", el patrón global solo se aplicará al área de trabajo correspondiente en un entorno de área de trabajo raíz múltiple.",
    "settings.python.analysis.importFormat.description": "Define el formato predeterminado para importar módulos.",
    "settings.python.analysis.include.description": "Rutas de acceso de directorios o archivos que deben incluirse. Si no se especifica ninguna ruta de acceso, Pylance tiene como valor predeterminado el directorio raíz del área de trabajo. Las rutas de acceso pueden contener caracteres comodín ** (un directorio o varios niveles de directorios), * (una secuencia de cero o más caracteres) o ? (un solo carácter). Si la ruta de acceso contiene una variable \"${workspaceFolder:<workspaceName>}\", el patrón global solo se aplicará al área de trabajo correspondiente en un entorno de área de trabajo raíz múltiple.",
    "settings.python.analysis.includeAliasesFromUserFiles.description": "Incluir símbolos de alias de archivos de usuario. Esto hará que los símbolos de alias se muestren en características como \"agregar importación\", \"importación automática\"",
    "settings.python.analysis.indexing.description": "Habilite la indexación de bibliotecas de terceros instaladas y archivos de usuario para características de lenguaje como la importación automática, la adición de importación, símbolos del área de trabajo, etc.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "Habilite o deshabilite las sugerencias de incrustación para los nombres de argumentos de llamada:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "Habilite o deshabilite las sugerencias de incrustación para los tipos de valor devuelto de función:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "Habilite o deshabilite las sugerencias de incrustación para los tipos de parámetros de la función pytest:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "Habilite o deshabilite las sugerencias de incrustación para tipos de variables. No se muestran sugerencias para asignaciones de literales o constantes:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "Especifica el nivel de registro para el panel de salida.",
    "settings.python.analysis.nodeExecutable.description": "Ruta de acceso a un Node.js ejecutable que se va a usar para ejecutar el servidor de lenguaje. Si no se especifica, el servidor de lenguaje usará la Node.js ejecutable que se incluye con VS Code. Establezca esta opción si tiene problemas para que Pylance se quede sin memoria. Consulte [aquí](https://aka.ms/AApf7ox) para obtener más información.",
    "settings.python.analysis.packageIndexDepths.description": "Se usa para invalidar el número de niveles de paquetes instalados que se van a indexar por paquete. De forma predeterminada, solo se indexan los módulos de nivel superior (depth = 1). Para indexar submódulos, aumente la depth en 1 para cada nivel de submódulo que desee indexar. Los valores aceptados son:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\nSi `includeAllSymbols` se establece en `false`, solo se incluyen los símbolos de la `__all__` de cada paquete. Cuando se establece en `true`, Pylance indexará todas las declaraciones de símbolos de nivel superior o módulo del archivo.  \r\n  \r\nEjemplo de uso: \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "Los índices de todas las bibliotecas de terceros se conservarán en el disco.",
    "settings.python.analysis.regenerateStdLibIndices.description": "En lugar de basarse en los índices de stdlib.json compartidos para todas las versiones de Python, genere índices únicos adaptados a la plataforma y la versión de Python específicas de cada área de trabajo. Este proceso de regeneración afectará al rendimiento, a diferencia del uso de los índices stdlib precompilados.",
    "settings.python.analysis.reportExtraTelemetry.description": "Notificar telemetría adicional [Experimental]. Solo para uso interno, puede provocar que Pylance se ralentice.",
    "settings.python.analysis.stubPath.description": "Ruta de acceso al directorio que contiene los archivos stub de tipos personalizados.",
    "settings.python.analysis.supportDocstringTemplate.description": "Habilita o deshabilita la compatibilidad con la generación de cadenas de documento. En una docstring en blanco, use `Ctrl+Space` para generar una docstring.",
    "settings.python.analysis.supportRestructuredText.description": "Habilite o deshabilite la compatibilidad con reStructuredText en docstrings. Experimental, puede hacer que docstrings deje de representarse.",
    "settings.python.analysis.typeEvaluation.analyzeUnannotatedFunctions.description": "Analice e informe de errores para funciones y métodos que no tienen anotaciones de tipo para parámetros de entrada o tipos de valor devuelto. El valor predeterminado para esta configuración es 'true'.",
    "settings.python.analysis.typeEvaluation.deprecateTypingAliases.description": "PEP 585 indica que los alias de los tipos de colecciones estándar que se introdujeron únicamente para admitir genéricos están en desuso a partir de Python 3.9. Este modificador controla si se tratan como en desuso. Esto solo se aplica cuando pythonVersion es 3.9 o posterior. El valor predeterminado de esta configuración es \"false\", pero puede cambiarse a \"true\" en el futuro.",
    "settings.python.analysis.typeEvaluation.disableBytesTypePromotions.description": "Deshabilita el comportamiento heredado donde `bytearray` y `memoryview` se consideran subtipos de `bytes`. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) deja este comportamiento en desuso, pero este modificador se proporciona para restaurar el comportamiento anterior. El valor predeterminado para esta configuración es 'false'.",
    "settings.python.analysis.typeEvaluation.enableExperimentalFeatures.description": "Habilita un conjunto de características experimentales (principalmente no documentadas) que corresponden a los cambios propuestos o exploratorios en el estándar de escritura de Python. Es probable que estas características cambien o se quiten, por lo que no deben usarse excepto con fines de experimentación. El valor predeterminado para esta configuración es `false`.",
    "settings.python.analysis.typeEvaluation.enableReachabilityAnalysis.description": "Si se habilita, se informa del código que el análisis de tipos determina que no es accesible mediante una sugerencia etiquetada. Esta configuración no afecta al código que está determinado como inaccesible independientemente del análisis de tipos; este código siempre se notifica como inaccesible. Esta configuración tampoco tiene efecto cuando se usa la versión de línea de comandos de pyright porque nunca emite sugerencias etiquetadas para código inalcanzable.",
    "settings.python.analysis.typeEvaluation.enableTypeIgnoreComments.description": "PEP 484 define la compatibilidad con los comentarios `# type: ignore`. Este modificador habilita o deshabilita la compatibilidad con estos comentarios. El valor predeterminado para esta configuración es 'true'. Esto no afecta a los comentarios de `# pyright: ignore`.",
    "settings.python.analysis.typeEvaluation.strictDictionaryInference.description": "Al inferir el tipo de claves y valores de un diccionario, use suposiciones de tipo estrictas. Por ejemplo, se puede inferir que la expresión `{'a': 1, 'b': 'a'}` es del tipo \"dict[str, Any]\" o \"dict[str, int | str]\". Si esta configuración es true, usará el último tipo (más estricto). El valor predeterminado para esta configuración es 'false'.",
    "settings.python.analysis.typeEvaluation.strictListInference.description": "Al inferir el tipo de una lista, use suposiciones de tipo estrictas. Por ejemplo, se puede inferir que la expresión `[1, 'a', 3.4]` es del tipo `list[Any]` o `list[int | str | float]`. Si esta configuración es true, usará el último tipo (más estricto). El valor predeterminado para esta configuración es 'false'.",
    "settings.python.analysis.typeEvaluation.strictParameterNoneValue.description": "PEP 484 indica que cuando a un parámetro de función se le asigna un valor predeterminado None, su tipo debe ser implícitamente Optional aunque el tipo explícito no lo sea. Cuando está habilitada, esta regla requiere que las anotaciones de tipo de parámetro usen Optional explícitamente en este caso. El valor predeterminado para esta configuración es 'true'.",
    "settings.python.analysis.typeEvaluation.strictSetInference.description": "When inferring the type of a set, use strict type assumptions. For example, the expression `{1, 'a', 3.4}` could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeshedPaths.description": "Rutas de acceso para buscar módulos typeshed.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "Use implementaciones de biblioteca para extraer información de tipo cuando el código auxiliar de tipo no está presente.",
    "settings.python.analysis.userFileIndexingLimit.description": "Número máximo de archivos de usuario que se van a indexar en el área de trabajo. La indexación de archivos es una tarea que consume mucho rendimiento. Use esta configuración para limitar el número de archivos que desea que indexemos. Si escribe -1, se indexarán todos los archivos.",
    "settings.typecheckingMode.basic.description": "Todas las reglas de comprobación de tipo \"off\" + \"basic\".",
    "settings.typecheckingMode.off.description": "Mostrar diagnósticos de sintaxis no válida, importaciones sin resolver, variables no definidas.",
    "settings.typecheckingMode.standard.description": "Todas las reglas de comprobación de tipos \"basic\" + \"standard\".",
    "settings.typecheckingMode.strict.description": "Todas las reglas de comprobación de tipos \"standard\" + \"strict\"."
}
