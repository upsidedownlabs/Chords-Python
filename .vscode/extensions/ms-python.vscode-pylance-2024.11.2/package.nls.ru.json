{
    "ClientLoc.ServerRestart.crashMessage": "Выполнено аварийное завершение работы Pylance.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Выполнено аварийное завершение работы Pylance. Pylance будет перезапущен при выборе исполняемого файла Node.js для запуска Pylance.",
    "ClientLoc.ServerRestart.restartingMessage": "Перезапуск Pylance с помощью Node.js...",
    "ClientLoc.ServerRestart.selectButton": "Выбрать",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Выберите исполняемый файл Node.js для запуска Pylance",
    "ClientLoc.askNodeSafetyQuestion": "Pylance настроен для запуска с {0}. Вы хотите использовать этот исполняемый файл для запуска Pylance?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Режим завершения автоматического импорта Python",
    "ClientLoc.autoImportCompletionsStatusItem.text": "Завершения автоматического импорта: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "Переключиться в режим \"Выкл.\"",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "Переключиться в режим \"Вкл.\"",
    "ClientLoc.crashTooManyRestarts": "За последние 3 минуты произошло 5 сбоев Pylance. Pylance не будет перезапущен. Дополнительные сведения см. по [этой ссылке](https://aka.ms/AApf7ox).",
    "ClientLoc.pylanceAndPythonPrereleaseExtensionMismatch": "Pylance и расширение Python содержат несовместимые общие зависимости.\r\nУбедитесь, что оба расширения являются последней предварительной версией.",
    "ClientLoc.pylanceAndPythonStableExtensionMismatch": "Pylance и расширение Python содержат несовместимые общие зависимости.\r\nОба расширения должны иметь последнюю стабильную версию.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Режим проверки типа Python",
    "ClientLoc.typeCheckingModeStatusItem.pickerPlaceholder": "Текущий режим: {0}. Выберите режим проверки типа.",
    "ClientLoc.typeCheckingModeStatusItem.pickerSettingsPage": "просмотреть на странице параметров",
    "ClientLoc.typeCheckingModeStatusItem.textFormatted": "Проверка типов: {0}",
    "ClientLoc.typeCheckingModeStatusItem.textFormattedFromConfig": "Проверка типа: {0} (от {1})",
    "ClientLoc.typeCheckingModeStatusItem.title": "Выбор режима проверки типа",
    "ClientLoc.typeCheckingModeStatusItem.titleConfig": "Открыть конфигурацию",
    "ClientLoc.updateSettingsErrorMsgFormatted": "Не удалось обновить параметр \"{0}.{1}\".",
    "Common.Help": "Справка",
    "Common.No": "Нет",
    "Common.Yes": "Да",
    "Common.reload": "Перезагрузить",
    "Common.remindMeLater": "Напомнить позже",
    "LanguageServer.settingsMigratedMessage": "Параметры, применимые к серверу Microsoft Language Server, скопированы в параметры Pylance. Подробные сведения см. в файлах settings.json.",
    "LanguageServer.settingsMigrationError": "Не удалось перенести следующие параметры:",
    "LanguageServer.settingsNotOverridable": "Невозможно установить \"{0}\" при pyrightconfig.json или pyproject.toml.",
    "Refactoring.MoveSymbol.newFileDetail": "Введите путь или выберите файл назначения",
    "Refactoring.MoveSymbol.newFileLabel": "Введите путь к конечному файлу",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "Выбрать",
    "Refactoring.MoveSymbol.openDialogTitle": "Выберите новый файл, чтобы переместить символ в...",
    "Refactoring.MoveSymbol.progressBarTitle": "Переместить символ в...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "Поиск в файле назначения",
    "Refactoring.MoveSymbol.quickPickTitle": "Выберите назначение для перемещения.",
    "Refactoring.MoveSymbol.separatorText": "Конечные файлы",
    "Refactoring.SearchImports.quickPickPlaceHolder": "Поиск импортированных данных",
    "Refactoring.SearchImports.quickPickTitle": "Поиск дополнительных совпадающих импортированных данных",
    "commands.pylance.docstrings.fold.title": "Pylance: свернуть все строки документации",
    "commands.pylance.docstrings.unfold.title": "Pylance: развернуть все строки документации",
    "commands.pylance.gotoOutputChannel.title": "Pylance: перейти к каналу вывода",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: очистить все сохраняемые индексы",
    "commands.pylance.logging.start.title": "Pylance: начать ведение журнала",
    "commands.pylance.logging.stop.title": "Pylance: остановить ведение журнала",
    "commands.pylance.profiling.start.title": "Pylance: начать профилирования",
    "commands.pylance.profiling.stop.title": "Pylance: остановить профилирование",
    "commands.pylance.reportIssue.title": "Pylance: сообщить о проблеме...",
    "settings.languageServerMode.default.description": "Оставьте Pylance с настройками по умолчанию.",
    "settings.languageServerMode.description": "Выберите предопределенный набор значений для настроек. Дополнительные сведения можно получить по [этой ссылке](https://aka.ms/languageserver-mode).",
    "settings.languageServerMode.light.description": "Настройте Pylance на выполнение только необходимой работы, чтобы сделать его упрощенным. Чтобы узнать, какие именно настройки и значения установлены, перейдите по ссылке в описании.",
    "settings.python.analysis.aiCodeActions.description": "Включение/отключение действий кода, выполняемых с помощью ИИ. Требует включенного расширения \"Copilot Chat\".",
    "settings.python.analysis.aiCodeActions.implementAbstractClasses.description": "Включение или отключение ИИ-помощника для реализации унаследованных абстрактных классов.",
    "settings.python.analysis.autoFormatStrings.description": "При вводе \"{\" в строке автоматически добавляется к строке префикс \"f\".",
    "settings.python.analysis.autoImportCompletions.description": "Включите автоматическое завершение импорта.",
    "settings.python.analysis.autoIndent.description": "Автоматическая корректировка отступов на основе семантики языка при вводе кода Python.",
    "settings.python.analysis.autoSearchPaths.description": "Автоматически добавлять общие пути поиска, такие как \"src\"",
    "settings.python.analysis.cacheLSPData.description": "Кэшировать данные LSP для ускорения завершения. Это экспериментальная функция, она может привести к остановке работы Pylance.",
    "settings.python.analysis.completeFunctionParens.description": "Добавление скобок в завершения функции.",
    "settings.python.analysis.completionOverrideExperiment.description": "Включение или отключение эксперимента при выполнении переопределения.",
    "settings.python.analysis.diagnosticMode.description": "Область анализа для демонстрации диагностики.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "Позволяет пользователю переопределить уровни серьезности для отдельной диагностики. Используйте имя правила в качестве ключа и \"error\", \"warning\", \"information\", \"none\", \"true\" (псевдоним для \"error\") или \"false\" (псевдоним для \"none\") в качестве значения. Значение по умолчанию, отображаемое для каждой диагностики, является значением по умолчанию, если для параметра \"python.analysis.typeCheckingMode\" установлено значение \"off\". См. [здесь](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) значения по умолчанию для каждого режима проверки типа (\"off\", \"basic\" и\"strict\").",
    "settings.python.analysis.disableTaggedHints.description": "Отключите диагностику подсказок со специальными подсказками для серого или зачеркнутого текста.",
    "settings.python.analysis.displayEnglishDiagnostics.description": "Отображение диагностики на английском языке независимо от языка интерфейса VS Code.",
    "settings.python.analysis.enablePytestSupport.description": "Включает поддержку pytest в Pylance.",
    "settings.python.analysis.enableSyncServer.description": "Используйте режим sync server [Экспериментальный]. Только для внутреннего использования: Pylance может перестать работать.",
    "settings.python.analysis.exclude.description": "Пути к каталогам или файлам, которые не следует включать. Они переопределяют включаемые каталоги, позволяя исключить определенные подкаталоги. Обратите внимание, что файлы в путях исключения все равно могут быть включены в анализ, если на них ссылаются (импортируют) исходные файлы, которые не исключены. Пути могут содержать подстановочные знаки ** (каталог или несколько уровней каталогов), * (последовательность из нуля или более символов) или ? (один символ). Если пути исключения не указаны, Pylance автоматически исключает следующее: `**/node_modules`, `**/__pycache__`, `.git` и любые каталоги виртуальной среды. Если путь содержит переменную \"${workspaceFolder:<workspaceName>}\", glob маска будет применяться только к соответствующей рабочей области в среде с несколькими корневыми рабочими областями.",
    "settings.python.analysis.extraCommitChars.description": "Разрешить использование \".\", \"(\" в качестве символов фиксации, если это применимо.",
    "settings.python.analysis.extraPaths.description": "Дополнительные пути разрешения поиска при импорте",
    "settings.python.analysis.fixAll.description": "исходные исправления для запуска в fix all.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "Для строковых литералов, которые выглядят как имена модулей, позволяет перейти к определению, чтобы перейти к модулю.",
    "settings.python.analysis.ignore.description": "Пути к каталогам или файлам, диагностический вывод которых (ошибки и предупреждения) должен подавляться, даже если они являются включенным файлом или находятся в пределах транзитивного закрытия включенного файла. Пути могут содержать подстановочные знаки ** (каталог или несколько уровней каталогов), * (последовательность из нуля или более символов) или ? (один символ). Если путь содержит переменную \"${workspaceFolder:<workspaceName>}\", glob маска будет применяться только к соответствующей рабочей области в среде с несколькими корневыми рабочими областями.",
    "settings.python.analysis.importFormat.description": "Определяет формат по умолчанию для импорта модулей.",
    "settings.python.analysis.include.description": "Пути к каталогам или файлам, которые следует включить. Если пути не указаны, Pylance по умолчанию использует корневой каталог рабочей области. Пути могут содержать подстановочные знаки ** (каталог или несколько уровней каталогов), * (последовательность из нуля или более символов) или ? (один символ). Если путь содержит переменную \"${workspaceFolder:<workspaceName>}\", glob маска будет применяться только к соответствующей рабочей области в среде с несколькими корневыми рабочими областями.",
    "settings.python.analysis.includeAliasesFromUserFiles.description": "Включить символы псевдонима из файлов пользователя. При этом будут отображаться символы псевдонима в таких функциях, как \"добавить импорт\", \"автоматический импорт\"",
    "settings.python.analysis.indexing.description": "Включите индексирование установленных сторонних библиотек и пользовательских файлов для таких языковых функций, как автоматический импорт, добавление импорта, символов рабочей области и т. д.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "Включить или отключить подсказки вложения для имен аргументов вызова:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "Включить или отключить подсказки вложения для возвращаемых типов функций:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "Включение или отключение подсказок вложения для типов параметров функции pytest:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "Enable/disable inlay hints for variable types. Hints are not displayed for assignments of literals or constants:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "Задает уровень ведения журнала для панели вывода.",
    "settings.python.analysis.nodeExecutable.description": "Путь к исполняемому файлу Node.js, используемому для запуска языкового сервера. Если этот параметр не указан, языковой сервер будет использовать исполняемый файл Node.js, который входит в состав VS Code. Установите этот параметр, если у вас возникли проблемы с нехваткой памяти в Pylance. Дополнительные сведения см. [здесь](https://aka.ms/AApf7ox).",
    "settings.python.analysis.packageIndexDepths.description": "Используется для переопределения числа индексируемых уровней установленных пакетов для каждого пакета. По умолчанию индексируются только модули верхнего уровня (depth = 1). Чтобы индексировать подмодули, увеличьте depth на 1 для каждого уровня подмодуля, который вы хотите индексировать. Допустимые значения:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\nЕсли для параметра \"includeAllSymbols\" установлено значение \"false\", включаются только символы из \"__all__\" каждого пакета. Если для него установлено значение \"true\", Pylance будет индексировать каждое объявление символа модуля или верхнего уровня в файле.  \r\n  \r\nПример использования: \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "Индексы всех сторонних библиотек будут сохранены на диске.",
    "settings.python.analysis.regenerateStdLibIndices.description": "Вместо того чтобы полагаться на общие индексы stdlib.json для всех версий Python, создайте уникальные индексы, настроенные для каждой конкретной версии и платформы Python в каждой рабочей области. Этот процесс повторного создания повлияет на производительность, в отличие от использования предварительно созданных индексов stdlib.",
    "settings.python.analysis.reportExtraTelemetry.description": "Передавать дополнительные данные телеметрии [экспериментальная функция]. Только для внутреннего использования: может привести к замедлению работы Pylance.",
    "settings.python.analysis.stubPath.description": "Путь к каталогу, содержащему файлы заглушек пользовательских типов.",
    "settings.python.analysis.supportDocstringTemplate.description": "Включить/отключить поддержку генерации строк документации. В пустой строке docstring используйте \"Ctrl+Space\" для создания строки docstring.",
    "settings.python.analysis.supportRestructuredText.description": "Enable/disable support for reStructuredText in docstrings. Experimental, may cause docstrings to no longer render.",
    "settings.python.analysis.typeEvaluation.analyzeUnannotatedFunctions.description": "Анализ ошибок и сообщение о них для функций и методов без заметок типа для входных параметров или типов возвращаемых значений. Значение по умолчанию для этого параметра: \"true\".",
    "settings.python.analysis.typeEvaluation.deprecateTypingAliases.description": "PEP 585 указывает, что псевдонимы типов в стандартных коллекциях, которые были введены исключительно для поддержки универсальных параметров, устарели с Python 3.9. Этот параметр определяет, считаются ли эти параметры нерекомендуемыми. Это применяется только в том случае, если значением pythonVersion является 3.9 или более новая версия. Значение по умолчанию для этого параметра — \"false\", но в будущем оно может быть изменено на \"true\".",
    "settings.python.analysis.typeEvaluation.disableBytesTypePromotions.description": "Отключает устаревшее поведение, когда `bytearray` и `memoryview` считаются подтипами `bytes`. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) делает это поведение нерекомендуемым, но этот параметр предоставляется для восстановления более старого поведения. Значение по умолчанию для этого параметра: `false`.",
    "settings.python.analysis.typeEvaluation.enableExperimentalFeatures.description": "Включает набор экспериментальных (в основном недокументированных) функций, соответствующих предложенным или произвольным изменениям стандарта ввода Python. Эти функции, скорее всего, будут изменены или удалены, поэтому их не следует использовать, кроме как для целей экспериментирования. Значение по умолчанию для этого параметра: `false`.",
    "settings.python.analysis.typeEvaluation.enableReachabilityAnalysis.description": "Если этот параметр включен, код, который определен как недоступный анализом типов, сообщается с помощью указания с тегами. Этот параметр не влияет на код, который определен как недоступный независимо от анализа типов; такой код всегда сообщается как недоступный. Этот параметр также не оказывает влияния при использовании версии pyright с командной строкой, так как она никогда не создает указания с тегами для недоступного кода.",
    "settings.python.analysis.typeEvaluation.enableTypeIgnoreComments.description": "PEP 484 определяет поддержку для комментариев `# type: ignore`. Этот параметр включает или отключает поддержку этих комментариев. Значение по умолчанию для этого параметра: `true`. Это не влияет на комментарии `# pyright: ignore`.",
    "settings.python.analysis.typeEvaluation.strictDictionaryInference.description": "При выводе типа ключей и значений словаря использовать строгие допущения типов. Например, выражение `{'a': 1, 'b': 'a'}` может выводиться в тип `dict[str, Any]` или `dict[str, int | str]`. Если этому параметру присвоено значение true, будет использоваться последний (более строгий) тип. Значение по умолчанию для этого параметра: `false`.",
    "settings.python.analysis.typeEvaluation.strictListInference.description": "При выводе типа list использовать строгие допущения типов. Например, выражение `[1, 'a', 3.4]` может выводиться в тип `list[Any]` или `list[int | str | float]`. Если этому параметру присвоено значение true, будет использоваться последний (более строгий) тип. Значение по умолчанию для этого параметра: `false`.",
    "settings.python.analysis.typeEvaluation.strictParameterNoneValue.description": "PEP 484 указывает, что если параметру функции назначено значение по умолчанию None, его типом неявно должен быть Optional, даже если явный тип не задан. Если включено, это правило требует, чтобы заметки типа параметра в этом случае явно использовали вариант Optional. Значение по умолчанию для этого параметра: \"true\".",
    "settings.python.analysis.typeEvaluation.strictSetInference.description": "When inferring the type of a set, use strict type assumptions. For example, the expression `{1, 'a', 3.4}` could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeshedPaths.description": "Пути для поиска typeshed модулей.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "Использовать реализации библиотеки для извлечения сведений о типе, если заглушка типа отсутствует.",
    "settings.python.analysis.userFileIndexingLimit.description": "Максимальное число пользовательских файлов для индексации в рабочей области. Индексирование файлов — задача, требующая высокой производительности. Используйте этот параметр, чтобы ограничить число файлов, которые нужно проиндексировать. Если ввести -1, мы проиндексируем все файлы.",
    "settings.typecheckingMode.basic.description": "Все правила из правил проверки типов \"off.\" и \"basic\".",
    "settings.typecheckingMode.off.description": "Показывать диагностику недопустимого синтаксиса, неразрешенного импорта, неопределенных переменных.",
    "settings.typecheckingMode.standard.description": "Все правила из правил проверки типов \"basic\" и \"standard\".",
    "settings.typecheckingMode.strict.description": "Все правила из правил проверки типов \"standard\" и \"strict\"."
}
