{
    "ClientLoc.ServerRestart.crashMessage": "Si è verificato un arresto anomalo del sistema di Pylance.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Si è verificato un arresto anomalo del sistema di Pylance. Pylance si riavvierà quando selezioni un eseguibile Node.js per eseguire Pylance.",
    "ClientLoc.ServerRestart.restartingMessage": "Riavvio di Pylance con Node.js...",
    "ClientLoc.ServerRestart.selectButton": "Seleziona",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Selezionare l'eseguibile Node.js per eseguire Pylance",
    "ClientLoc.askNodeSafetyQuestion": "Pylance è configurato per essere eseguito con {0}. Utilizzare questo eseguibile per eseguire Pylance?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Modalità Completamenti importazione automatica Python",
    "ClientLoc.autoImportCompletionsStatusItem.text": "Completamenti importazione automatica: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "Disattiva",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "Attiva",
    "ClientLoc.crashTooManyRestarts": "Pylance si è arrestato in modo anomalo 5 volte negli ultimi 3 minuti. Pylance non verrà riavviato. Per altri dettagli, consultare [questo collegamento](https://aka.ms/AApf7ox).",
    "ClientLoc.pylanceAndPythonPrereleaseExtensionMismatch": "Le estensioni Pylance e Python hanno dipendenze condivise incompatibili.\r\nAssicurarsi che entrambe le estensioni siano la versione pre-rilascio più recente.",
    "ClientLoc.pylanceAndPythonStableExtensionMismatch": "Le estensioni Pylance e Python hanno dipendenze condivise incompatibili.\r\nAssicurarsi che entrambe le estensioni siano la versione stabile più recente.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Modalità di controllo del tipo Python",
    "ClientLoc.typeCheckingModeStatusItem.pickerPlaceholder": "Modalità corrente: {0}. Selezionare la modalità di controllo del tipo.",
    "ClientLoc.typeCheckingModeStatusItem.pickerSettingsPage": "visualizza nella pagina delle impostazioni",
    "ClientLoc.typeCheckingModeStatusItem.textFormatted": "Controllo del tipo: {0}",
    "ClientLoc.typeCheckingModeStatusItem.textFormattedFromConfig": "Controllo del tipo: {0} (da {1})",
    "ClientLoc.typeCheckingModeStatusItem.title": "Seleziona modalità di controllo del tipo",
    "ClientLoc.typeCheckingModeStatusItem.titleConfig": "Apri configurazione",
    "ClientLoc.updateSettingsErrorMsgFormatted": "Non è stato possibile aggiornare l'impostazione '{0}.{1}'.",
    "Common.Help": "Guida",
    "Common.No": "No",
    "Common.Yes": "Sì",
    "Common.reload": "Ricarica",
    "Common.remindMeLater": "Ricordamelo più tardi",
    "LanguageServer.settingsMigratedMessage": "Le impostazioni applicabili a Microsoft Language Server sono state copiate nelle impostazioni di Pylance. Per informazioni dettagliate, controllare i file settings.json.",
    "LanguageServer.settingsMigrationError": "Impossibile eseguire la migrazione delle impostazioni seguenti:",
    "LanguageServer.settingsNotOverridable": "Non è possibile impostare '{0}' quando si usa un file pyrightconfig.json o pyproject.toml.",
    "Refactoring.MoveSymbol.newFileDetail": "Immettere il percorso o selezionare il file di destinazione",
    "Refactoring.MoveSymbol.newFileLabel": "Immettere il percorso del file di destinazione",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "Selezionare",
    "Refactoring.MoveSymbol.openDialogTitle": "Selezionare il nuovo file in cui spostare il simbolo...",
    "Refactoring.MoveSymbol.progressBarTitle": "Spostare simbolo in...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "Cerca nel file di destinazione",
    "Refactoring.MoveSymbol.quickPickTitle": "Selezionare la destinazione per lo spostamento",
    "Refactoring.MoveSymbol.separatorText": "File di destinazione",
    "Refactoring.SearchImports.quickPickPlaceHolder": "Cercare importazioni",
    "Refactoring.SearchImports.quickPickTitle": "Cercare importazioni corrispondenti aggiuntive",
    "commands.pylance.docstrings.fold.title": "Pylance: riduci tutte le docstring",
    "commands.pylance.docstrings.unfold.title": "Pylance: espandi tutte le docstring",
    "commands.pylance.gotoOutputChannel.title": "Pylance: vai al canale di output",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: cancellare tutti gli indici persistenti",
    "commands.pylance.logging.start.title": "Pylance: Avvia registrazione",
    "commands.pylance.logging.stop.title": "Pylance: Interrompi registrazione",
    "commands.pylance.profiling.start.title": "Pylance: avviare la profilatura",
    "commands.pylance.profiling.stop.title": "Pylance: arrestare la profilatura",
    "commands.pylance.reportIssue.title": "Pylance: segnalare problema...",
    "settings.languageServerMode.default.description": "Lasciare Pylance con le impostazioni predefinite.",
    "settings.languageServerMode.description": "Selezionare un set di valori predefinito per le impostazioni. Per altri dettagli, vedere [this link](https://aka.ms/languageserver-mode).",
    "settings.languageServerMode.light.description": "Impostare Pylance solo per l'esecuzione del lavoro essenziale per renderlo più leggero. Vedere il collegamento nella descrizione per scoprire esattamente su quali valori sono impostate le impostazioni specifiche.",
    "settings.python.analysis.aiCodeActions.description": "Abilitare/disabilitare le azioni del codice assistito dall`intelligenza artificiale. Richiede l`abilitazione dell`estensione Copilot Chat.",
    "settings.python.analysis.aiCodeActions.implementAbstractClasses.description": "Abilitare/disabilitare l'assistenza con intelligenza artificiale per l'implementazione delle classi astratte ereditate.",
    "settings.python.analysis.autoFormatStrings.description": "Quando si digita un '{' in una stringa, anteporre automaticamente alla stringa un carattere 'f'.",
    "settings.python.analysis.autoImportCompletions.description": "Abilitare i completamenti dell'importazione automatica.",
    "settings.python.analysis.autoIndent.description": "Regola automaticamente il rientro in base alla semantica del linguaggio durante la digitazione del codice Python.",
    "settings.python.analysis.autoSearchPaths.description": "Aggiungi automaticamente percorsi di ricerca comuni come 'src'.",
    "settings.python.analysis.cacheLSPData.description": "Memorizzare i dati LSP nella cache per rendere le operazioni di completamento più veloci. Sperimentale, può causare l'interruzione del funzionamento di Pylance.",
    "settings.python.analysis.completeFunctionParens.description": "Aggiungere le parentesi ai completamenti delle funzioni.",
    "settings.python.analysis.completionOverrideExperiment.description": "Abilitare/disabilitare l'esperimento sul comportamento di override del completamento.",
    "settings.python.analysis.diagnosticMode.description": "Ambito di analisi per la visualizzazione della diagnostica.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "Consente a un utente di eseguire l'override dei livelli di gravità per la diagnostica individuale. Utilizzare il nome della regola come chiave e uno dei valori seguenti: \"error\", \"warning\", \"information\", \"none\", 'true' (alias per \"error\") o 'false' (alias per \"none\"). Il valore predefinito visualizzato per ogni diagnostica è il valore predefinito quando \"python.analysis.typeCheckingMode\" è impostato su \"off\". Vedere [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) per le impostazioni predefinite per ogni modalità di controllo dei tipi (\"off\", \"basic\" e \"strict\").",
    "settings.python.analysis.disableTaggedHints.description": "Disabilita la diagnostica dei suggerimenti con suggerimenti speciali per testo disattivato o barrato.",
    "settings.python.analysis.displayEnglishDiagnostics.description": "Visualizza la diagnostica in inglese indipendentemente dalla lingua di visualizzazione di VS Code.",
    "settings.python.analysis.enablePytestSupport.description": "Abilita il supporto di pytest in Pylance.",
    "settings.python.analysis.enableSyncServer.description": "Usa la modalità sync server [Sperimentale]. Solo per uso interno, può causare l'interruzione del funzionamento di Pylance.",
    "settings.python.analysis.exclude.description": "Percorsi di directory o file che non devono essere inclusi. Queste sottodirectory eseguono l'override delle directory di inclusione, consentendo l'esclusione di sottodirectory specifiche. Si noti che i file nei percorsi di esclusione possono ancora essere inclusi nell'analisi se vi viene fatto riferimento (importati) da file di origine non esclusi. I percorsi possono contenere caratteri jolly ** (una directory o più livelli di directory), * (una sequenza di zero o più caratteri) o ? (un singolo carattere). Se non vengono specificati percorsi di esclusione, Pylance esclude automaticamente i seguenti elementi: `**/node_modules`, `**/__pycache__`, `.git` ed eventuali directory dell'ambiente virtuale. Se il percorso contiene una variabile \"${workspaceFolder:<workspaceName>}\", il criterio glob si applicherà all'area di lavoro corrispondente in un ambiente multi-radice.",
    "settings.python.analysis.extraCommitChars.description": "Consenti l'uso di '.', '(' come caratteri di commit, se applicabile.",
    "settings.python.analysis.extraPaths.description": "Percorsi di risoluzione della ricerca di importazione aggiuntivi",
    "settings.python.analysis.fixAll.description": "correzioni di origine da eseguire in tutte le correzioni.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "Per i valori letterali stringa simili ai nomi dei moduli, consente di passare alla definizione per passare al modulo.",
    "settings.python.analysis.ignore.description": "Percorsi di directory o file il cui output di diagnostica (errori e avvisi) deve essere eliminato anche se si tratta di un file incluso o all'interno della chiusura transitiva di un file incluso. I percorsi possono contenere caratteri jolly ** (una directory o più livelli di directory), * (una sequenza di zero o più caratteri) o ? (un singolo carattere). Se il percorso contiene una variabile \"${workspaceFolder:<workspaceName>}\", il criterio glob si applicherà all'area di lavoro corrispondente in un ambiente multi-radice.",
    "settings.python.analysis.importFormat.description": "Definisce il formato predefinito per l’importazione di moduli.",
    "settings.python.analysis.include.description": "Percorsi di directory o file che devono essere inclusi. Se non viene specificato alcun percorso, Pylance usa per impostazione predefinita la directory radice dell'area di lavoro. I percorsi possono contenere caratteri jolly ** (una directory o più livelli di directory), * (una sequenza di zero o più caratteri) o ? (un singolo carattere). Se il percorso contiene una variabile \"${workspaceFolder:<workspaceName>}\", il criterio glob si applicherà all'area di lavoro corrispondente in un ambiente multi-radice.",
    "settings.python.analysis.includeAliasesFromUserFiles.description": "Includi simboli alias dai file utente. In questo modo i simboli alias verranno visualizzati in funzionalità come 'add import', 'auto import'",
    "settings.python.analysis.indexing.description": "Abilitare l'indicizzazione di librerie di terze parti installate e i file utente per le funzionalità del linguaggio come importazione automatica, aggiunta di importazione, simboli dell'area di lavoro e così via.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "Abilitare/disabilitare gli hint di inlay per i nomi degli argomenti di chiamata:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "Abilita/Disabilita gli hint di inlay per i tipi restituiti di funzione:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "Abilitare/disabilitare gli hint di inlay per i tipi di parametri della funzione pytest:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "Enable/disable inlay hints for variable types. Hints are not displayed for assignments of literals or constants:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "Specifica il livello di registrazione per il pannello di output",
    "settings.python.analysis.nodeExecutable.description": "Percorso relativo a un file eseguibile Node.js da usare per l'esecuzione del server di linguaggio. Se non specificato, il server di linguaggio userà il file eseguibile Node.js fornito con VS Code. Impostare questa opzione se si verificano problemi con la memoria insufficiente di Pylance. Vedere [qui](https://aka.ms/AApf7ox) per altre informazioni.",
    "settings.python.analysis.packageIndexDepths.description": "Consente di eseguire l'override del numero di livelli nei pacchetti installati da indicizzare per ogni pacchetto. Per impostazione predefinita, vengono indicizzati solo i moduli di livello superiore (depth = 1). Per indicizzare i moduli secondari, aumenta la depth di 1 per ogni livello di modulo secondario da indicizzare. I valori accettati sono:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\nSe includeAllSymbols` è impostato su `false`, sono inclusi solo i simboli in `__all__` di ogni pacchetto. Quando è impostato su `true`, Pylance indicizzerà ogni dichiarazione di modulo/simbolo di livello superiore nel file.  \r\n  \r\nEsempio di utilizzo: \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "Gli indici per tutte le librerie di terze parti verranno salvati in modo permanente su disco.",
    "settings.python.analysis.regenerateStdLibIndices.description": "Anziché basarsi sugli indici di stdlib.json condivisi per tutte le versioni di Python, generare indici univoci personalizzati per la versione e la piattaforma Python specifiche di ogni area di lavoro. Questo processo di rigenerazione influirà sulle prestazioni, diversamente dall'uso degli indici stdlib predefiniti.",
    "settings.python.analysis.reportExtraTelemetry.description": "Riporta dati di diagnostica aggiuntivi [Sperimentale]. Solo per uso interno, può causare il rallentamento di Pylance.",
    "settings.python.analysis.stubPath.description": "Percorso della directory contenente i file stub di tipo personalizzato.",
    "settings.python.analysis.supportDocstringTemplate.description": "Abilita/disabilita il supporto per la generazione di docstring. In una stringa di documento vuota, usare 'CTRL+BARRA SPAZIATRICE' per generare una stringa di documento.",
    "settings.python.analysis.supportRestructuredText.description": "Enable/disable support for reStructuredText in docstrings. Experimental, may cause docstrings to no longer render.",
    "settings.python.analysis.typeEvaluation.analyzeUnannotatedFunctions.description": "Consente di analizzare e segnalare errori per funzioni e metodi senza annotazioni di tipo per parametri di input o tipi restituiti. Il valore predefinito per questa impostazione è 'true'.",
    "settings.python.analysis.typeEvaluation.deprecateTypingAliases.description": "LA PEP 585 indica che gli alias dei tipi nelle raccolte standard che sono stati introdotti esclusivamente per supportare i generics sono deprecati a partire da Python 3.9. Questa opzione controlla se vengono considerati deprecati. Si applica solo quando pythonVersion è 3.9 o versione successiva. Il valore predefinito per questa impostazione è `false` ma potrebbe essere impostato su `true` in futuro.",
    "settings.python.analysis.typeEvaluation.disableBytesTypePromotions.description": "Disabilita il comportamento legacy in cui `bytearray` e `memoryview` sono considerati sottotipi di `bytes`. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) depreca questo comportamento, ma questa opzione viene fornita per ripristinare il comportamento precedente. Il valore predefinito per questa impostazione è `false`.",
    "settings.python.analysis.typeEvaluation.enableExperimentalFeatures.description": "Abilita un set di funzionalità sperimentali (per la maggior parte non documentate) che corrispondono a modifiche proposte o esplorative allo standard di digitazione Python. È probabile che queste funzionalità cambino o vengano rimosse, quindi non devono essere usate se non a scopo di sperimentazione. Il valore predefinito per questa impostazione è `false`.",
    "settings.python.analysis.typeEvaluation.enableReachabilityAnalysis.description": "Se questa opzione è abilitata, il codice che è determinato come irraggiungibile dall'analisi dei tipi viene segnalato usando un hint con tag. Questa impostazione non influisce sul codice che è determinato come irraggiungibile indipendentemente dall'analisi del tipo; tale codice viene sempre segnalato come irraggiungibile. Questa impostazione non ha alcun effetto anche quando si usa la versione da riga di comando di pyright perché non crea mai hint contrassegnati per codice non raggiungibile.",
    "settings.python.analysis.typeEvaluation.enableTypeIgnoreComments.description": "La PEP 484 definisce il supporto per i commenti `# type: ignore`. Questa opzione abilita o disabilita il supporto per questi commenti. Il valore predefinito per questa impostazione è `true`. Questo non influisce sui commenti `# pyright: ignore`.",
    "settings.python.analysis.typeEvaluation.strictDictionaryInference.description": "Quando si deduce il tipo di chiavi e valori di un dizionario, usare presupposti di tipo strict. Ad esempio, è possibile dedurre che l`espressione `{'a': 1, 'b': 'a'}` sia di tipo `dict[str, Any]` o `dict[str, int | str]`. Se questa impostazione è true, userà l`ultimo tipo (più restrittivo). Il valore predefinito per questa impostazione è `false`.",
    "settings.python.analysis.typeEvaluation.strictListInference.description": "When inferring the type of a list, use strict type assumptions. For example, the expression `[1, 'a', 3.4]` could be inferred to be of type `list[Any]` or `list[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeEvaluation.strictParameterNoneValue.description": "La PEP 484 indica che quando a un parametro di funzione viene assegnato il valore predefinito di None, il relativo tipo deve essere in modo implicito Optional, anche se il tipo esplicito non lo è. Se abilitata, questa regola richiede che in questo caso le annotazioni del tipo di parametro usino Optional in modo esplicito. Il valore predefinito per questa impostazione è `true`.",
    "settings.python.analysis.typeEvaluation.strictSetInference.description": "When inferring the type of a set, use strict type assumptions. For example, the expression `{1, 'a', 3.4}` could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeshedPaths.description": "Percorsi per la ricerca di moduli typeshed.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "Usare le implementazioni della libreria per estrarre le informazioni sul tipo quando lo stub di tipo non è presente.",
    "settings.python.analysis.userFileIndexingLimit.description": "Numero massimo di file utente da indicizzare nell'area di lavoro. L'indicizzazione dei file è un'attività che richiede un elevato livello di prestazioni. Utilizzare questa impostazione per limitare il numero di file da indicizzare. Se si immette -1, tutti i file verranno indicizzati.",
    "settings.typecheckingMode.basic.description": "Tutte le regole dalle regole di controllo dei tipi \"off\" + \"basic\".",
    "settings.typecheckingMode.off.description": "Mostra la diagnostica per sintassi non valida, importazioni non risolte, variabili non definite.",
    "settings.typecheckingMode.standard.description": "Tutte le regole dalle regole di controllo dei tipi di \"basic\" e \"standard\".",
    "settings.typecheckingMode.strict.description": "Tutte le regole dalle regole di controllo dei tipi di \"standard\" e \"strict\"."
}
