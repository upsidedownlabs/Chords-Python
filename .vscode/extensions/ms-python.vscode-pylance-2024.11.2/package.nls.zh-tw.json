{
    "ClientLoc.ServerRestart.crashMessage": "Pylance 已損毀。",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Pylance 已損毀。當您選取要執行 Pylance 的 Node.js 可執行檔時，會重新啟動 Pylance。",
    "ClientLoc.ServerRestart.restartingMessage": "正在使用 Node.js 重新啟動 Pylance...",
    "ClientLoc.ServerRestart.selectButton": "選取",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "選取 Node.js 可執行檔以執行 Pylance",
    "ClientLoc.askNodeSafetyQuestion": "Pylance 已設定為搭配 {0} 執行。您要使用這個可執行檔來執行 Pylance 嗎?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Python 自動匯入完成模式",
    "ClientLoc.autoImportCompletionsStatusItem.text": "自動匯入完成: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "切換為關閉",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "切換為開啟",
    "ClientLoc.crashTooManyRestarts": "Pylance 在過去 3 分鐘內已當機 5 次。Pylance 將不會重新啟動。如需更多詳細資料，請參閱[此連結](https://aka.ms/AApf7ox)。",
    "ClientLoc.pylanceAndPythonPrereleaseExtensionMismatch": "Pylance 和 Python 延伸模組具有不相容的共用相依性。\r\n請確定這兩個延伸模組都是最新的發行前版本。",
    "ClientLoc.pylanceAndPythonStableExtensionMismatch": "Pylance 和 Python 延伸模組具有不相容的共用相依性。\r\n請確定這兩個延伸模組都是最新的穩定版本。",
    "ClientLoc.typeCheckingModeStatusItem.name": "Python 類型檢查模式",
    "ClientLoc.typeCheckingModeStatusItem.pickerPlaceholder": "目前模式: {0}。選取類型檢查模式。",
    "ClientLoc.typeCheckingModeStatusItem.pickerSettingsPage": "在設定頁面上檢視",
    "ClientLoc.typeCheckingModeStatusItem.textFormatted": "類型檢查: {0}",
    "ClientLoc.typeCheckingModeStatusItem.textFormattedFromConfig": "類型檢查: {0} (自 {1})",
    "ClientLoc.typeCheckingModeStatusItem.title": "選取類型檢查模式",
    "ClientLoc.typeCheckingModeStatusItem.titleConfig": "開啟設定",
    "ClientLoc.updateSettingsErrorMsgFormatted": "無法更新設定 '{0}.{1}'。",
    "Common.Help": "說明",
    "Common.No": "否",
    "Common.Yes": "是",
    "Common.reload": "重新載入",
    "Common.remindMeLater": "稍後提醒我",
    "LanguageServer.settingsMigratedMessage": "適用於 Microsoft Language Server 的設定已複製到 Pylance 設定。如需詳細資料，請查看 settings.json 檔案。",
    "LanguageServer.settingsMigrationError": "無法移轉下列設定:",
    "LanguageServer.settingsNotOverridable": "使用 pyrightconfig.json 或 pyproject.toml 時，無法設定 '{0}'。",
    "Refactoring.MoveSymbol.newFileDetail": "輸入路徑或選取目的地檔案",
    "Refactoring.MoveSymbol.newFileLabel": "輸入目的地檔案路徑",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "選取",
    "Refactoring.MoveSymbol.openDialogTitle": "選取新檔案以移動符號至...",
    "Refactoring.MoveSymbol.progressBarTitle": "移動符號至...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "搜尋目的地檔案",
    "Refactoring.MoveSymbol.quickPickTitle": "選取要移動的目的地",
    "Refactoring.MoveSymbol.separatorText": "目的地檔案",
    "Refactoring.SearchImports.quickPickPlaceHolder": "搜尋匯入",
    "Refactoring.SearchImports.quickPickTitle": "搜尋其他相符的匯入",
    "commands.pylance.docstrings.fold.title": "Pylance: 摺疊所有 Docstrings",
    "commands.pylance.docstrings.unfold.title": "Pylance: 展開所有 Docstrings",
    "commands.pylance.gotoOutputChannel.title": "Pylance: 移至輸出通道",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: 清除所有保存的索引",
    "commands.pylance.logging.start.title": "Pylance: 開始記錄",
    "commands.pylance.logging.stop.title": "Pylance: 停止記錄",
    "commands.pylance.profiling.start.title": "Pylance: 開始分析",
    "commands.pylance.profiling.stop.title": "Pylance: 停止分析",
    "commands.pylance.reportIssue.title": "Pylance: 報告問題...",
    "settings.languageServerMode.default.description": "保留 Pylance 的預設設定。",
    "settings.languageServerMode.description": "選取一組預先定義的設定值。請查看 [此連結](https://aka.ms/languageserver-mode) 以了解更多資訊。",
    "settings.languageServerMode.light.description": "將 Pylance 設定為只執行必要的工作，使其輕量。請參閱描述中的連結，以確切了解哪些設定設定了什麼值。",
    "settings.python.analysis.aiCodeActions.description": "啟用/停用 AI 輔助程式碼動作。需要啟用 Copilot Chat 延伸模組。",
    "settings.python.analysis.aiCodeActions.implementAbstractClasses.description": "啟用/停用 AI 協助以實作繼承的抽象類別。",
    "settings.python.analysis.autoFormatStrings.description": "在字串中輸入 '{' 時，會自動在字串前面輸入 'f'。",
    "settings.python.analysis.autoImportCompletions.description": "啟用自動匯入完成。",
    "settings.python.analysis.autoIndent.description": "鍵入 Python 程式碼時，根據語言語意學自動調整縮排。",
    "settings.python.analysis.autoSearchPaths.description": "自動新增常用搜尋路徑，如 'src'。",
    "settings.python.analysis.cacheLSPData.description": "快取 LSP 資料以加快完成速度。實驗性，可能會導致 Pylance 停止運作。",
    "settings.python.analysis.completeFunctionParens.description": "新增括弧以完成函數。",
    "settings.python.analysis.completionOverrideExperiment.description": "啟用/停用完成覆寫行為上的實驗。",
    "settings.python.analysis.diagnosticMode.description": "用於顯示診斷的分析範圍。",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "允許使用者覆寫個別診斷的嚴重性層級。使用規則名稱做為索引鍵，並使用 \"error\"、\"warning\"、\"information\"、\"none\"、`true` (\"error\" 的別名) 或 `false` (\"none\" 的別名) 之一做為值。當「python.analysis.typeCheckingMode」設定為 \"off\" 時，每個診斷所顯示的預設值都是預設值。請參閱 [此處](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) 了解每個類型檢查模式 (\"off\"、\"basic\" 和 \"strict\") 的預設值。",
    "settings.python.analysis.disableTaggedHints.description": "對於特殊提示有灰色或刪除線的文字停用提示診斷。",
    "settings.python.analysis.displayEnglishDiagnostics.description": "無論 VS Code 的顯示語言為何，都以英文顯示診斷。",
    "settings.python.analysis.enablePytestSupport.description": "啟用 Pylance 中的 pytest 支援。",
    "settings.python.analysis.enableSyncServer.description": "使用 sync server 模式 [實驗性]。僅供內部使用，可能會導致 Pylance 停止工作。",
    "settings.python.analysis.exclude.description": "不應包含的目錄或檔案路徑。這些會覆寫包含目錄，允許排除特定的子目錄。請注意，如果未排除的來源檔案參照 (已匯出) 排除路徑中的檔案，這些檔案可能仍包含在分析中。路徑可能包含萬用字元 ** (目錄或多個目錄層級)、* (零或多個字元的序列) 或 ?(單一字元)。如果未指定排除路徑，Pylance 會自動排除下列項目: `**/node_modules`、`**/__pycache__`、`.git` 及任何虛擬環境目錄。如果路徑包含 '${workspaceFolder:<workspaceName>}' 變數，則 glob 模式只會套用至多根工作區環境中的對應工作區。",
    "settings.python.analysis.extraCommitChars.description": "允許在適用時使用 '.'、'(' 做為認可字元。",
    "settings.python.analysis.extraPaths.description": "其他匯出搜尋解析路徑",
    "settings.python.analysis.fixAll.description": "來源修正，以在全部修正中執行。",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "對於看起來像模組名稱的字串常值，啟用移至定義以移至模組。",
    "settings.python.analysis.ignore.description": "應該隱藏診斷輸出 (錯誤和警告) 的目錄或檔案路徑，即使它們是包含的檔案，或在包含檔案的傳遞閉包內。路徑可能包含萬用字元 ** (目錄或多個目錄層級)、* (零或多個字元的序列) 或 ?(單一字元)。如果路徑包含 '${workspaceFolder:<workspaceName>}' 變數，則 glob 模式只會套用至多根工作區環境中的對應工作區。",
    "settings.python.analysis.importFormat.description": "定義匯入模組的預設格式。",
    "settings.python.analysis.include.description": "應該包含的目錄或檔案路徑。如果未指定路徑，Pylance 會預設為工作區根目錄。路徑可能包含萬用字元 ** (目錄或多個目錄層級)、* (零或多個字元的序列) 或 ?(單一字元)。如果路徑包含 '${workspaceFolder:<workspaceName>}' 變數，則 glob 模式只會套用至多根工作區環境中的對應工作區。",
    "settings.python.analysis.includeAliasesFromUserFiles.description": "包含來自使用者檔案的別名符號。這會將別名符號顯示在如「新增匯入」、「自動匯入」等功能中",
    "settings.python.analysis.indexing.description": "啟用已安裝語言功能的協力廠商文件庫和使用者檔案編制索引，例如自動匯入、新增匯入、工作區符號等等。",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "開啟/停用呼叫引數名稱的內嵌提示:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "開啟/停用函數傳回類型的內嵌提示:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "啟用/停用 pytest 函式參數類型的內嵌提示:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "啟用/停用變數型別的內嵌提示。不會針對常值或常數的指派顯示提示:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "指定 [輸出] 面板的記錄層級",
    "settings.python.analysis.nodeExecutable.description": "用於執行語言伺服器之 Node.js 可執行檔的路徑。如果未指定，語言伺服器將使用 VS Code 隨附的 Node.js 可執行檔。如果 Pylance 記憶體不足，請設定此選項。如需詳細資訊，請參閱[此處](https://aka.ms/AApf7ox)。",
    "settings.python.analysis.packageIndexDepths.description": "用來覆寫已安裝套件下要根據每個套件編製索引的層級數。根據預設，只有頂層模組會編製索引 (depth = 1)。若要為子模組編製索引，請針對您想要編製索引的每個子模組層級，將 depth 增加 1。接受的值為:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\n如果 `includeAllSymbols` 設定為 `false`，則只會包含每個套件 `__all__` 中的符號。當設定為 `true` 時，Pylance 會為檔案中每個模組/頂層符號宣告編製索引。 \r\n \r\n使用範例:\r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "所有協力廠商程式庫的索引都會保存至磁碟。",
    "settings.python.analysis.regenerateStdLibIndices.description": "不要依賴所有 Python 版本的共用 stdlib.json 索引，而是針對每個工作區的特定 Python 版本和平台產生量身訂做的唯一索引。與使用預先佈建的 stdlib 索引不同，此重新產生程序將會影響效能。",
    "settings.python.analysis.reportExtraTelemetry.description": "報告額外的遙測 [實驗性]。僅供內部使用，可能會導致 Pylance 的速度降低。",
    "settings.python.analysis.stubPath.description": "包含自訂型別 stub 檔案的目錄路徑。",
    "settings.python.analysis.supportDocstringTemplate.description": "啟用/停用 docstring 產生的支援。在空白的 docstring 中，使用 `Ctrl+Space` 可產生 docstring。",
    "settings.python.analysis.supportRestructuredText.description": "Enable/disable support for reStructuredText in docstrings. Experimental, may cause docstrings to no longer render.",
    "settings.python.analysis.typeEvaluation.analyzeUnannotatedFunctions.description": "分析及報告沒有輸入參數或返回類型之類型註釋之函數和方法的錯誤。此設定預設值為 `true`。",
    "settings.python.analysis.typeEvaluation.deprecateTypingAliases.description": "PEP 585 表示，自 Python 3.9 起，標準集合中為支援泛型而引進的別名已取代。此切換會控制是否將這些項目視為已取代。這僅會在 pythonVersion 為 3.9 或更新版本時才適用。此設定預設值為 `false`，但未來可能會切換為 `true`。",
    "settings.python.analysis.typeEvaluation.disableBytesTypePromotions.description": "停用將 `bytearray` 和 `memoryview` 視為 `bytes` 子類型的舊版行為。[PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) 取代此行為，但提供此切換以還原舊版的行為。此設定預設值為 `false`。",
    "settings.python.analysis.typeEvaluation.enableExperimentalFeatures.description": "啟用一組實驗性 (大部分為未記載) 功能，這些功能對應到 Python 輸入標準的建議或探勘變更。這些功能可能會變更或移除，因此除了實驗目的之外，不應使用這些功能。此設定預設值為 `false`。",
    "settings.python.analysis.typeEvaluation.enableReachabilityAnalysis.description": "啟用時，會使用標記的提示來報告經類型分析判定為無法連線的代碼。無論類型分析如何，此設定不會影響判斷為無法連線的代碼; 這類代碼一律報告為無法連線。當使用命令列版本的 pyright 時，此設定也沒有任何作用，因為它永遠不會針對無法連線的代碼發出標記的提示。",
    "settings.python.analysis.typeEvaluation.enableTypeIgnoreComments.description": "PEP 484 定義對 `# type: ignore` 註解的支援。此切換可啟用或停用對這些註解的支援。此設定預設值為 `true`。這不會影響 `# pyright: ignore` 註解。",
    "settings.python.analysis.typeEvaluation.strictDictionaryInference.description": "推斷字典的索引鍵和值類型時，請使用嚴格類型假設。例如，運算式 `{'a': 1, 'b': 'a'}` 可以推斷為 `dict[str, Any]` 或 `dict[str, int | str]` 類型。如果此設定為 true，則會使用後者 (較嚴格) 的類型。此設定預設值為 `false`。",
    "settings.python.analysis.typeEvaluation.strictListInference.description": "推斷 list 類型時，請使用嚴格類型假設。例如，運算式 `[1, 'a', 3.4]` 可以推斷為 `list[Any]` 或 `list[int | str | float]` 類型。如果此設定為 true，則會使用後者 (較嚴格) 的類型。此設定預設值為 `false`。",
    "settings.python.analysis.typeEvaluation.strictParameterNoneValue.description": "PEP 484 表示已指派函數參數預設值為 None 時，即使明確類型不是 Optional，其類型也應隱含選擇性。啟用時，此規則要求參數類型註釋在此案例中明確使用 [Optional]。此設定預設值為 `true`。",
    "settings.python.analysis.typeEvaluation.strictSetInference.description": "When inferring the type of a set, use strict type assumptions. For example, the expression `{1, 'a', 3.4}` could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeshedPaths.description": "尋找 typeshed 模組的路徑。",
    "settings.python.analysis.useLibraryCodeForTypes.description": "當類型虛設常式不存在時，使用文件庫實作來擷取類型資訊。",
    "settings.python.analysis.userFileIndexingLimit.description": "工作區中要編製索引的使用者檔案數目上限。為檔案編製索引是一項需要大量效能的工作。請使用此設定來限制您希望我們編製索引的檔案數目。如果您輸入 -1，我們會編製所有檔案的索引。",
    "settings.typecheckingMode.basic.description": "來自 \"off\" + \"basic\" 類型檢查規則的所有規則。",
    "settings.typecheckingMode.off.description": "顯示無效語法、未解析的輸入、未定義的變數之診斷。",
    "settings.typecheckingMode.standard.description": "來自 \"basic\" + \"standard\" 類型檢查規則的所有規則。",
    "settings.typecheckingMode.strict.description": "來自 \"standard\" + \"strict\" 類型檢查規則的所有規則。"
}
